// ****************************************************************************
//
// Copyright (c) 2008 Broadcom Corporation
//
// This program is the proprietary software of Broadcom Corporation and/or
// its licensors, and may only be used, duplicated, modified or distributed
// pursuant to the terms and conditions of a separate, written license
// agreement executed between you and Broadcom (an "Authorized License").
// Except as set forth in an Authorized License, Broadcom grants no license
// (express or implied), right to use, or waiver of any kind with respect to
// the Software, and Broadcom expressly reserves all rights in and to the
// Software and all intellectual property rights therein.  IF YOU HAVE NO
// AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY,
// AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE
// SOFTWARE.  
//
// Except as expressly set forth in the Authorized License,
//
// 1.     This program, including its structure, sequence and organization,
// constitutes the valuable trade secrets of Broadcom, and you shall use all
// reasonable efforts to protect the confidentiality thereof, and to use this
// information only in connection with your use of Broadcom integrated circuit
// products.
//
// 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED
// "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS
// OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH
// RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL
// IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR
// A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET
// ENJOYMENT, QUIET POSSESSION OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME
// THE ENTIRE RISK ARISING OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
//
// 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM
// OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL,
// INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY
// RELATING TO YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM
// HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN
// EXCESS OF THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
// WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY
// FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.
//
// ****************************************************************************
//
//  Filename:         bmu_dmem.h
//  Generated by:     RDB Utility
//  Creation Date:    8/7/2008
//  Command Line:     
// ****************************************************************************
//
// IMPORTANT: DO NOT MODIFY, THIS IS AN AUTOGENERATED FILE. 
// Please modify the source .rdb file instead if you need to change this file. 
// Contact Jeff Bauch if you need more information.
//
// ****************************************************************************
#ifndef BMU_DMEM_H__
#define BMU_DMEM_H__



typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 Type                           :4; 
                                              
                                              
                                              
                                              
                                              
    uint32 Cerr                           :3; 
    uint32 Reserved2                      :1; 
    uint32 S                              :1; 
    uint32 Dc                             :1; 
    uint32 Ch                             :1; 
    uint32 U                              :1; 
    uint32 D                              :1; 
    uint32 C                              :1; 
    uint32 V                              :1; 
    uint32 P                              :1; 
                                              
  } Bits;
  uint32 Reg32;
}  BmuDmemBatteryStatus;


typedef union {
  struct {
    uint32 Reserved                       :29;
    uint32 Cd                             :1; 
    uint32 Dd                             :1; 
    uint32 Ci                             :1; 
  } Bits;
  uint32 Reg32;
}  BmuDmemBmuControl;


typedef union {
  struct {
    uint32 Reserved                       :23;
    uint32 Aa                             :1; 
    uint32 Reserved2                      :4; 
    uint32 Por                            :1; 
                                              
                                              
                                              
                                              
                                              
    uint32 Ipf                            :1; 
                                              
    uint32 Lbw                            :1; 
                                              
    uint32 V                              :1; 
                                              
                                              
  } Bits;
  uint32 Reg32;
}  BmuDmemBmuStatus;


typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 Data                           :16;
  } Bits;
  uint32 Reg32;
}  BmuDmemCmdDataLsw;


typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 Data                           :16;
  } Bits;
  uint32 Reg32;
}  BmuDmemCmdDataMsw;


typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 Data                           :16;
  } Bits;
  uint32 Reg32;
}  BmuDmemDataMem16Location;


typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 Bfc3                           :1; 
    uint32 Bfc2                           :1; 
    uint32 Bfc1                           :1; 
    uint32 Bes                            :1; 
    uint32 Bov                            :1; 
    uint32 Uie                            :1; 
    uint32 Vwe                            :1; 
    uint32 Iov                            :1; 
    uint32 Reserved2                      :1; 
    uint32 Ivp                            :1; 
    uint32 Dhf                            :1; 
    uint32 Doi                            :1; 
    uint32 Pvr                            :1; 
    uint32 Cui                            :1; 
    uint32 Coi                            :1; 
    uint32 Cov                            :1; 
  } Bits;
  uint32 Reg32;
}  BmuDmemHwFault;


typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 Qual                           :5; 
    uint32 Cec                            :4; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 Cmd                            :5; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 I                              :1; 
    uint32 C                              :1; 
                                              
  } Bits;
  uint32 Reg32;
}  BmuDmemMipsCommand;


typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 State                          :16;
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  BmuDmemPicoState;


typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 Value                          :16;
  } Bits;
  uint32 Reg32;
}  BmuDmemAdcValue16;

typedef struct {
  BmuDmemBmuStatus                    BmuStatus;               
  BmuDmemAdcValue16                   RecentVtherm;            
  BmuDmemAdcValue16                   RecentVin;               
  BmuDmemHwFault                      HwFaults;                
  BmuDmemHwFault                      HwFaultInhibit;          
  BmuDmemPicoState                    PicoState;               
  BmuDmemBatteryStatus                BatAStatus;              
  BmuDmemAdcValue16                   BatAid;                  
  BmuDmemAdcValue16                   BatAVbat;                
  uint32                              BatAUnused;              
  BmuDmemBatteryStatus                BatBStatus;              
  BmuDmemAdcValue16                   BatBid;                  
  BmuDmemAdcValue16                   BatBvBat;                
  uint32                              BatBUnused;              
  BmuDmemDataMem16Location            DMEM0_[8];               
  BmuDmemBmuControl                   BmuControl;              
  BmuDmemMipsCommand                  MipsCmd;                 
  BmuDmemCmdDataLsw                   CmdDataLsw;              
  BmuDmemCmdDataMsw                   CmdDataMsw;              
  uint32                              CmdExtra1;               
  uint32                              CmdExtra2;               
  BmuDmemDataMem16Location            DMEM1_[2];               
  uint32                              PcTimeout;               
  uint32                              FcTimeout;               
  uint32                              TcTimeout;               
  BmuDmemDataMem16Location            DischargeStartStopMsec;  
                                                                 
                                                                 
  BmuDmemDataMem16Location            MaxTimeouts;             
  BmuDmemDataMem16Location            AltFunction;             
  BmuDmemAdcValue16                   Vinit;                   
  BmuDmemAdcValue16                   Fcvterm;                 
  BmuDmemAdcValue16                   LowBatWarning;           
  BmuDmemDataMem16Location            BattSelectDelay;         
                                                                 
  BmuDmemDataMem16Location            DMEM3_[8];               
  BmuDmemDataMem16Location            ODATA[16];               
  BmuDmemDataMem16Location            Scratchpad[176];         
}  BmuDmemRegs;

#endif 



