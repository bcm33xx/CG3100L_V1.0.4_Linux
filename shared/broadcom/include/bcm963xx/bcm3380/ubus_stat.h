// ****************************************************************************
//
// Copyright (c) 2008 Broadcom Corporation
//
// This program is the proprietary software of Broadcom Corporation and/or
// its licensors, and may only be used, duplicated, modified or distributed
// pursuant to the terms and conditions of a separate, written license
// agreement executed between you and Broadcom (an "Authorized License").
// Except as set forth in an Authorized License, Broadcom grants no license
// (express or implied), right to use, or waiver of any kind with respect to
// the Software, and Broadcom expressly reserves all rights in and to the
// Software and all intellectual property rights therein.  IF YOU HAVE NO
// AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY,
// AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE
// SOFTWARE.  
//
// Except as expressly set forth in the Authorized License,
//
// 1.     This program, including its structure, sequence and organization,
// constitutes the valuable trade secrets of Broadcom, and you shall use all
// reasonable efforts to protect the confidentiality thereof, and to use this
// information only in connection with your use of Broadcom integrated circuit
// products.
//
// 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED
// "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS
// OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH
// RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL
// IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR
// A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET
// ENJOYMENT, QUIET POSSESSION OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME
// THE ENTIRE RISK ARISING OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
//
// 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM
// OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL,
// INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY
// RELATING TO YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM
// HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN
// EXCESS OF THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
// WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY
// FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.
//
// ****************************************************************************
//
//  Filename:         ubus_stat.h
//  Generated by:     RDB Utility
//  Creation Date:    8/7/2008
//  Command Line:     
// ****************************************************************************
//
// IMPORTANT: DO NOT MODIFY, THIS IS AN AUTOGENERATED FILE. 
// Please modify the source .rdb file instead if you need to change this file. 
// Contact Jeff Bauch if you need more information.
//
// ****************************************************************************
#ifndef UBUS_STAT_H__
#define UBUS_STAT_H__



typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 CmdFilter                      :16;
  } Bits;
  uint32 Reg32;
}  UbusStatCmdFilter;


typedef union {
  struct {
    uint32 EnUseTrapWin1                  :1; 
                                              
    uint32 EnMinmaxTrap1                  :1; 
                                              
                                              
    uint32 EnMinmaxTrap0                  :1; 
                                              
                                              
    uint32 EnUseWin6                      :1; 
                                              
    uint32 EnMinmax6                      :1; 
                                              
                                              
    uint32 EnUseWin5                      :1; 
                                              
    uint32 EnMinmax5                      :1; 
                                              
                                              
    uint32 EnUseWin4                      :1; 
                                              
    uint32 EnMinmax4                      :1; 
                                              
                                              
    uint32 EnUseWin3                      :1; 
                                              
    uint32 EnMinmax3                      :1; 
                                              
                                              
    uint32 EnUseWin2                      :1; 
                                              
    uint32 EnMinmax2                      :1; 
                                              
                                              
    uint32 EnUseWin1                      :1; 
                                              
    uint32 EnMinmax1                      :1; 
                                              
                                              
    uint32 EnMinmax0                      :1; 
                                              
                                              
    uint32 EnStopTrapAddr                 :1; 
    uint32 TrapTrigWordNum                :7; 
                                              
    uint32 EnCaptureTimeStamp             :1; 
    uint32 EnCombineReqRep                :1; 
                                              
                                              
                                              
    uint32 EnCaptureStop                  :1; 
                                              
    uint32 EnCaptureLoopIt                :1; 
                                              
    uint32 EnCaptureNoData                :1; 
                                              
    uint32 EnCaptureMemoryRead            :1; 
    uint32 EnCaptureClear                 :1; 
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 CaptureEnable                  :1; 
                                              
  } Bits;
  uint32 Reg32;
}  UbusStatControl;


typedef union {
  struct {
    uint32 Reserved                       :14;
    uint32 CaptureStopOnReplyError        :1; 
                                              
    uint32 StopTrapDataEn                 :1; 
                                              
                                              
    uint32 TrapDataByteEn                 :8; 
                                              
                                              
    uint32 ReplyErrorIntrEn               :1; 
                                              
    uint32 CaptureStopOnGpioEn            :1; 
                                              
    uint32 CaptureStopOnIntrEn            :1; 
                                              
    uint32 CaptureStopOnErrorEn           :1; 
                                              
    uint32 CaptureStoppedIntrEn           :1; 
                                              
    uint32 FirstCaptureIntrEn             :1; 
                                              
    uint32 UbusErrorsIntrEn               :1; 
                                              
    uint32 UbusStatGlobalIntrEn           :1; 
                                              
  } Bits;
  uint32 Reg32;
}  UbusStatInterrupt;


typedef union {
  struct {
    uint32 SrcPidFilter                   :16;
    uint32 DestPidFilter                  :16;
  } Bits;
  uint32 Reg32;
}  UbusStatPidFilter;


typedef union {
  struct {
    uint32 Reserved                       :5; 
    uint32 CaptureStoppedIntrEn           :1; 
                                              
    uint32 CaptureStoppedIntr             :1; 
                                              
    uint32 FirstCaptureIntrEn             :1; 
                                              
    uint32 FirstCaptureIntr               :1; 
                                              
    uint32 UbusErrorsIntrEn               :1; 
                                              
    uint32 UbusErrorsIntr                 :1; 
                                              
    uint32 ReplyErrorIntr                 :1; 
    uint32 UbusStatGlobalIntrEn           :1; 
                                              
    uint32 CaptureEnable                  :1; 
                                              
    uint32 CaptureReadEnable              :1; 
                                              
    uint32 CaptureFull                    :1; 
                                              
    uint32 ReqCaptureFull                 :1; 
                                              
    uint32 ReqCapturePtr                  :7; 
    uint32 RepCaptureFull                 :1; 
                                              
    uint32 RepCapturePtr                  :7; 
  } Bits;
  uint32 Reg32;
}  UbusStatStatus;

typedef struct {
  uint32                              RepMem2K[512];           
}  UbusStatRepMem;

typedef struct {
  uint32                              ReqMem2K[512];           
}  UbusStatReqMem;

typedef struct {
  UbusStatPidFilter                   PidFilter;               
  UbusStatCmdFilter                   CmdFilter;               
  uint32                              Add0MaskMax;             
  uint32                              Add0FilterMin;           
  uint32                              Add1MaskMax;             
  uint32                              Add1FilterMin;           
  uint32                              Add2MaskMax;             
  uint32                              Add2FilterMin;           
  uint32                              Add3MaskMax;             
  uint32                              Add3FilterMin;           
  uint32                              Add4MaskMax;             
  uint32                              Add4FilterMin;           
  uint32                              Add5MaskMax;             
  uint32                              Add5FilterMin;           
  uint32                              Add6MaskMax;             
  uint32                              Add6FilterMin;           
  uint32                              Add0TrapMaskMax;         
  uint32                              Add0TrapFilterMin;       
  uint32                              Add1TrapMaskMax;         
  uint32                              Add1TrapFilterMin;       
  UbusStatControl                     Control;                 
  UbusStatStatus                      Status;                  
  UbusStatInterrupt                   Interrupt;               
  uint32                              TrapData0;               
  uint32                              TrapData1;               
  uint32                              Rsvd0;                   
  uint32                              Rsvd1;                   
  uint32                              Rsvd2;                   
}  UbusStatRegs;

#endif 



