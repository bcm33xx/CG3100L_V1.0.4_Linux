// ****************************************************************************
//
// Copyright (c) 2008 Broadcom Corporation
//
// This program is the proprietary software of Broadcom Corporation and/or
// its licensors, and may only be used, duplicated, modified or distributed
// pursuant to the terms and conditions of a separate, written license
// agreement executed between you and Broadcom (an "Authorized License").
// Except as set forth in an Authorized License, Broadcom grants no license
// (express or implied), right to use, or waiver of any kind with respect to
// the Software, and Broadcom expressly reserves all rights in and to the
// Software and all intellectual property rights therein.  IF YOU HAVE NO
// AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY,
// AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE
// SOFTWARE.  
//
// Except as expressly set forth in the Authorized License,
//
// 1.     This program, including its structure, sequence and organization,
// constitutes the valuable trade secrets of Broadcom, and you shall use all
// reasonable efforts to protect the confidentiality thereof, and to use this
// information only in connection with your use of Broadcom integrated circuit
// products.
//
// 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED
// "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS
// OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH
// RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL
// IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR
// A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET
// ENJOYMENT, QUIET POSSESSION OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME
// THE ENTIRE RISK ARISING OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
//
// 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM
// OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL,
// INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY
// RELATING TO YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM
// HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN
// EXCESS OF THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
// WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY
// FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.
//
// ****************************************************************************
//
//  Filename:         ddr23_phy_byte_lane.h
//  Generated by:     RDB Utility
//  Creation Date:    8/7/2008
//  Command Line:     
// ****************************************************************************
//
// IMPORTANT: DO NOT MODIFY, THIS IS AN AUTOGENERATED FILE. 
// Please modify the source .rdb file instead if you need to change this file. 
// Contact Jeff Bauch if you need more information.
//
// ****************************************************************************
#ifndef DDR23_PHY_BYTE_LANE_H__
#define DDR23_PHY_BYTE_LANE_H__



typedef union {
  struct {
    uint32 Reserved                       :31;
    uint32 ClkPadDis                      :1; 
                                              
                                              
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  Ddr23PhyByteLaneClockPadDisable;


typedef union {
  struct {
    uint32 Reserved                       :26;
    uint32 Rt60BDdrReadEnb                :1; 
    uint32 Rt60B                          :1; 
                                              
                                              
    uint32 SelSstl18                      :1; 
                                              
                                              
    uint32 SeltxdrvCi                     :1; 
                                              
                                              
    uint32 Selrxdrv                       :1; 
                                              
                                              
    uint32 Slew                           :1; 
                                              
                                              
  } Bits;
  uint32 Reg32;
}  Ddr23PhyByteLaneDrivePadCtl;


typedef union {
  struct {
    uint32 Idle                           :1; 
                                              
                                              
                                              
                                              
    uint32 Reserved                       :11;
    uint32 DmRxenb                        :1; 
                                              
                                              
                                              
    uint32 DmIddq                         :1; 
                                              
                                              
                                              
    uint32 DmReb                          :1; 
                                              
                                              
                                              
    uint32 DmOeb                          :1; 
                                              
                                              
                                              
    uint32 DqRxenb                        :1; 
                                              
                                              
                                              
    uint32 DqIddq                         :1; 
                                              
                                              
                                              
    uint32 DqReb                          :1; 
                                              
                                              
                                              
    uint32 DqOeb                          :1; 
                                              
                                              
                                              
    uint32 ReadEnbRxenb                   :1; 
                                              
                                              
                                              
    uint32 ReadEnbIddq                    :1; 
                                              
                                              
                                              
                                              
                                              
    uint32 ReadEnbReb                     :1; 
                                              
                                              
                                              
    uint32 ReadEnbOeb                     :1; 
                                              
                                              
                                              
    uint32 DqsRxenb                       :1; 
                                              
                                              
                                              
    uint32 DqsIddq                        :1; 
                                              
                                              
                                              
    uint32 DqsReb                         :1; 
                                              
                                              
                                              
    uint32 DqsOeb                         :1; 
                                              
                                              
                                              
    uint32 ClkRxenb                       :1; 
                                              
                                              
                                              
    uint32 ClkIddq                        :1; 
                                              
                                              
                                              
    uint32 ClkReb                         :1; 
                                              
                                              
                                              
    uint32 ClkOeb                         :1; 
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  Ddr23PhyByteLaneIdlePadControl;


typedef union {
  struct {
    uint32 Reserved                       :22;
    uint32 RdDataDly                      :2; 
                                              
                                              
    uint32 Reserved2                      :4; 
    uint32 DqOdtEnable                    :1; 
                                              
                                              
                                              
    uint32 DqOdtAdj                       :1; 
                                              
                                              
                                              
    uint32 RdEnbOdtEnable                 :1; 
                                              
                                              
                                              
    uint32 RdEnbOdtAdj                    :1; 
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  Ddr23PhyByteLaneReadControl;


typedef union {
  struct {
    uint32 Reserved                       :31;
    uint32 Clear                          :1; 
                                              
  } Bits;
  uint32 Reg32;
}  Ddr23PhyByteLaneReadFifoClear;


typedef union {
  struct {
    uint32 Reserved                       :28;
    uint32 Status                         :4; 
                                              
                                              
  } Bits;
  uint32 Reg32;
}  Ddr23PhyByteLaneReadFifoStatus;


typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 Major                          :8; 
    uint32 Minor                          :8; 
  } Bits;
  uint32 Reg32;
}  Ddr23PhyByteLaneRevision;


typedef union {
  struct {
    uint32 Reserved                       :27;
    uint32 CalibClocks                    :1; 
                                              
                                              
                                              
    uint32 CalibTest                      :1; 
                                              
                                              
                                              
    uint32 CalibAlways                    :1; 
                                              
                                              
    uint32 CalibOnce                      :1; 
                                              
                                              
    uint32 CalibFast                      :1; 
                                              
                                              
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  Ddr23PhyByteLaneVdlCalibrate;


typedef union {
  struct {
    uint32 Reserved                       :15;
    uint32 OvrEn                          :1; 
                                              
                                              
    uint32 Reserved2                      :2; 
    uint32 OvrFineFall                    :2; 
    uint32 Reserved3                      :2; 
    uint32 OvrFineRise                    :2; 
                                              
    uint32 Reserved4                      :3; 
    uint32 OvrStep                        :5; 
  } Bits;
  uint32 Reg32;
}  Ddr23PhyByteLaneVdlOverride;


typedef union {
  struct {
    uint32 Reserved                       :19;
    uint32 CalibTotal                     :9; 
                                              
                                              
                                              
                                              
    uint32 Reserved2                      :2; 
    uint32 CalibLock                      :1; 
                                              
                                              
                                              
    uint32 CalibIdle                      :1; 
                                              
                                              
  } Bits;
  uint32 Reg32;
}  Ddr23PhyByteLaneVdlStatus;


typedef union {
  struct {
    uint32 Reserved                       :31;
    uint32 Mode                           :1; 
                                              
                                              
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  Ddr23PhyByteLaneWrPreambleMode;

typedef struct {
  Ddr23PhyByteLaneRevision            Revision;                
  Ddr23PhyByteLaneVdlCalibrate        VdlCalibrate;            
  Ddr23PhyByteLaneVdlStatus           VdlStatus;               
  uint8                               Pad0[0x4];
  Ddr23PhyByteLaneVdlOverride         VdlOverride0;            
  Ddr23PhyByteLaneVdlOverride         VdlOverride1;            
  Ddr23PhyByteLaneVdlOverride         VdlOverride2;            
  Ddr23PhyByteLaneVdlOverride         VdlOverride3;            
                                                                 
  Ddr23PhyByteLaneVdlOverride         VdlOverride4;            
  Ddr23PhyByteLaneVdlOverride         VdlOverride5;            
  Ddr23PhyByteLaneVdlOverride         VdlOverride6;            
  Ddr23PhyByteLaneVdlOverride         VdlOverride7;            
                                                                 
  Ddr23PhyByteLaneReadControl         ReadControl;             
  Ddr23PhyByteLaneReadFifoStatus      ReadFifoStatus;          
  Ddr23PhyByteLaneReadFifoClear       ReadFifoClear;           
  Ddr23PhyByteLaneIdlePadControl      IdlePadControl;          
  Ddr23PhyByteLaneDrivePadCtl         DrivePadCtl;             
  Ddr23PhyByteLaneClockPadDisable     ClockPadDisable;         
  Ddr23PhyByteLaneWrPreambleMode      WrPreambleMode;          
}  Ddr23PhyByteLaneRegisters;

#endif 



