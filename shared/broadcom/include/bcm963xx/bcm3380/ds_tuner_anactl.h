// ****************************************************************************
//
// Copyright (c) 2008 Broadcom Corporation
//
// This program is the proprietary software of Broadcom Corporation and/or
// its licensors, and may only be used, duplicated, modified or distributed
// pursuant to the terms and conditions of a separate, written license
// agreement executed between you and Broadcom (an "Authorized License").
// Except as set forth in an Authorized License, Broadcom grants no license
// (express or implied), right to use, or waiver of any kind with respect to
// the Software, and Broadcom expressly reserves all rights in and to the
// Software and all intellectual property rights therein.  IF YOU HAVE NO
// AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY,
// AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE
// SOFTWARE.  
//
// Except as expressly set forth in the Authorized License,
//
// 1.     This program, including its structure, sequence and organization,
// constitutes the valuable trade secrets of Broadcom, and you shall use all
// reasonable efforts to protect the confidentiality thereof, and to use this
// information only in connection with your use of Broadcom integrated circuit
// products.
//
// 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED
// "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS
// OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH
// RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL
// IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR
// A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET
// ENJOYMENT, QUIET POSSESSION OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME
// THE ENTIRE RISK ARISING OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
//
// 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM
// OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL,
// INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY
// RELATING TO YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM
// HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN
// EXCESS OF THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
// WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY
// FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.
//
// ****************************************************************************
//
//  Filename:         ds_tuner_anactl.h
//  Generated by:     RDB Utility
//  Creation Date:    8/7/2008
//  Command Line:     
// ****************************************************************************
//
// IMPORTANT: DO NOT MODIFY, THIS IS AN AUTOGENERATED FILE. 
// Please modify the source .rdb file instead if you need to change this file. 
// Contact Jeff Bauch if you need more information.
//
// ****************************************************************************
#ifndef DS_TUNER_ANACTL_H__
#define DS_TUNER_ANACTL_H__


enum DS_REL_TUNER_ANACTL_on_off {
  DS_REL_TUNER_ANACTL_on_off_on=0x1,                 
  DS_REL_TUNER_ANACTL_on_off_off=0x0,                
};

enum DS_REL_TUNER_ANACTL_enable_disable {
  DS_REL_TUNER_ANACTL_enable_disable_enable=0x1,     
  DS_REL_TUNER_ANACTL_enable_disable_disable=0x0,    
};


typedef union {
  struct {
    uint32 Spare                          :14;
    uint32 DcoPreQCompOut                 :1; 
    uint32 DcoPreICompOut                 :1; 
    uint32 Revision                       :16;
  } Bits;
  uint32 Reg32;
}  DsRelTunerAnactlWdata00;


typedef union {
  struct {
    uint32 Rftrk1In                       :3; 
    uint32 Rftrk2Bias                     :2; 
    uint32 Rftrk1Bias                     :4; 
    uint32 Rftrk1VddCntl                  :3; 
    uint32 Rftrk1Roof                     :4; 
    uint32 Rftrk1Bw                       :6; 
    uint32 RffeAttdb                      :3; 
    uint32 FilterSel                      :2; 
    uint32 DpmRst                         :1; 
    uint32 DpmPwrdn                       :1; 
    uint32 DpmAmp                         :3; 
  } Bits;
  uint32 Reg32;
}  DsRelTunerAnactlWdata01;


typedef union {
  struct {
    uint32 MixOutbias                     :2; 
    uint32 MixAtt                         :3; 
    uint32 MixPwrdn                       :1; 
    uint32 MixIcntl                       :4; 
    uint32 PhoutLvlbkoff                  :1; 
    uint32 DivSel                         :3; 
    uint32 Rstcmosbb                      :1; 
    uint32 HrEn                           :1; 
    uint32 EnDcDpm                        :1; 
    uint32 VgaCmEn                        :1; 
    uint32 Dpm6dbGain                     :1; 
    uint32 RftVcmBoostEn                  :1; 
    uint32 PgalpfPwrdn                    :1; 
    uint32 RftrkVdd2p1                    :3; 
    uint32 RftrkCm                        :3; 
    uint32 Rftrk2BwHf                     :1; 
    uint32 Rftrk2Bw                       :4; 
  } Bits;
  uint32 Reg32;
}  DsRelTunerAnactlWdata02;


typedef union {
  struct {
    uint32 PdbPhout                       :1; 
    uint32 IflpfBias                      :4; 
    uint32 IflpfPwroffq                   :1; 
    uint32 IflpfPwroffi                   :1; 
    uint32 IflpfPwroff                    :1; 
    uint32 IflpfBwr                       :7; 
    uint32 FgaRcCntl                      :7; 
    uint32 PgaPwrdn                       :1; 
    uint32 FgaIcntl                       :3; 
    uint32 FgaGain                        :3; 
    uint32 MixLobias                      :3; 
  } Bits;
  uint32 Reg32;
}  DsRelTunerAnactlWdata03;


typedef union {
  struct {
    uint32 Rftrk1Gain                     :2; 
    uint32 VgaofsDac2comp                 :1; 
    uint32 VgaQdcoPwrdn                   :1; 
    uint32 VgaQdcoLbs                     :3; 
    uint32 VgaIdcoPwrdn                   :1; 
    uint32 VgaIdcoLbs                     :3; 
    uint32 Reg1p2vPwrdn                   :1; 
    uint32 DcoPreGmGain                   :1; 
    uint32 DcoPreQpI                      :3; 
    uint32 IDcoPreIqPwrdnVbal             :1; 
    uint32 DcoPreIqPwrdn                  :1; 
    uint32 IDcoMixReset                   :1; 
    uint32 Vga64mBw                       :1; 
    uint32 IAdcCmEn                       :1; 
    uint32 OutPadEn                       :1; 
    uint32 OutvgaPwrsav                   :4; 
    uint32 OutvgaPwrdn                    :1; 
    uint32 OutvgaCmSft                    :3; 
    uint32 OutvgaAtt                      :2; 
  } Bits;
  uint32 Reg32;
}  DsRelTunerAnactlWdata04;


typedef union {
  struct {
    uint32 IpFblvlfdoff                   :1; 
    uint32 IpPd                           :1; 
    uint32 IpVcref                        :5; 
    uint32 IpPwrupWd                      :1; 
    uint32 IpLdReset                      :1; 
    uint32 IpLdEn                         :1; 
    uint32 IpVcoSel                       :2; 
    uint32 IpCapCntl                      :6; 
    uint32 IpRefCntl                      :6; 
    uint32 IpVcoPwrdn                     :1; 
    uint32 IpCmlDiv2Cnt                   :2; 
    uint32 IpCmldivrst                    :1; 
    uint32 PwrdnBg1p2                     :1; 
    uint32 BgCoreAdj                      :3; 
  } Bits;
  uint32 Reg32;
}  DsRelTunerAnactlWdata05;


typedef union {
  struct {
    uint32 IpLodivby4en                   :1; 
    uint32 Spare0                         :1; 
    uint32 ImfCm                          :3; 
    uint32 IpRcntl                        :2; 
    uint32 IpManrstclf                    :1; 
    uint32 IpPwrupLf                      :1; 
    uint32 IpVcPrbEn                      :1; 
    uint32 IpVzPrbEn                      :1; 
    uint32 IpQp2Pd                        :1; 
    uint32 IpQpbiascnt2                   :5; 
    uint32 IpQpmainbiascnt2               :2; 
    uint32 IpManvbal                      :1; 
    uint32 IpManibal                      :1; 
    uint32 IpQpbiascnt                    :5; 
    uint32 IpQpmainbiascnt                :2; 
    uint32 IpQpPd                         :1; 
    uint32 IpFbcmibiascnt                 :2; 
    uint32 IpDiv1612b                     :1; 
  } Bits;
  uint32 Reg32;
}  DsRelTunerAnactlWdata06;


typedef union {
  struct {
    uint32 Spare0                         :1; 
    uint32 Spare1                         :2; 
    uint32 Cml1200Cmlcnt                  :2; 
    uint32 D2d1200Pwrdn                   :1; 
    uint32 VbgXtalEn                      :1; 
    uint32 Cml1200Pwrdn                   :1; 
    uint32 IDacClksel                     :1; 
    uint32 IDacClkdel                     :1; 
    uint32 DacIctl                        :4; 
    uint32 IDacPwrup                      :1; 
    uint32 DacGmx                         :4; 
    uint32 ImfPwrdn                       :1; 
    uint32 DacIfHp                        :1; 
    uint32 DacB                           :3; 
    uint32 DacimfregPwrdn                 :1; 
    uint32 IpPdLo                         :1; 
    uint32 ImfResCal                      :5; 
    uint32 ImfResPd                       :1; 
  } Bits;
  uint32 Reg32;
}  DsRelTunerAnactlWdata07;


typedef union {
  struct {
    uint32 Spare0                         :11;
    uint32 MxrdcoGmicntl                  :3; 
    uint32 MxrdcoCompEn                   :1; 
    uint32 MxrDcoLsb1p2                   :3; 
    uint32 MxrDcodacPwrdn1p2              :1; 
    uint32 MxrdcoDataQ1p2                 :5; 
    uint32 MxrdcoDataI1p2                 :5; 
    uint32 Spare1                         :1; 
    uint32 DcoMixIRst                     :1; 
    uint32 DcoMixQQpRst                   :1; 
  } Bits;
  uint32 Reg32;
}  DsRelTunerAnactlWdata14;


typedef union {
  struct {
    uint32 Spare0                         :15;
    uint32 Spare1                         :10;
    uint32 SpltBiasCntl                   :2; 
    uint32 MixbiasEn                      :1; 
    uint32 SpltPd                         :1; 
    uint32 SpltVddCntl                    :3; 
  } Bits;
  uint32 Reg32;
}  DsRelTunerAnactlWdata15;

typedef struct {
  DsRelTunerAnactlWdata00             Wdata00;                 
  DsRelTunerAnactlWdata01             Wdata01;                 
  DsRelTunerAnactlWdata02             Wdata02;                 
  DsRelTunerAnactlWdata03             Wdata03;                 
  DsRelTunerAnactlWdata04             Wdata04;                 
  DsRelTunerAnactlWdata05             Wdata05;                 
  DsRelTunerAnactlWdata06             Wdata06;                 
  DsRelTunerAnactlWdata07             Wdata07;                 
  uint8                               Pad0[0x18];
  DsRelTunerAnactlWdata14             Wdata14;                 
  DsRelTunerAnactlWdata15             Wdata15;                 
  uint8                               Pad1[0xfc0];
}  DsRelTunerAnactlRegisters;

#endif 



