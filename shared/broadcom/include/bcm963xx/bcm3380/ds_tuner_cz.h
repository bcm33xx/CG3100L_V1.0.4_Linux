// ****************************************************************************
//
// Copyright (c) 2008 Broadcom Corporation
//
// This program is the proprietary software of Broadcom Corporation and/or
// its licensors, and may only be used, duplicated, modified or distributed
// pursuant to the terms and conditions of a separate, written license
// agreement executed between you and Broadcom (an "Authorized License").
// Except as set forth in an Authorized License, Broadcom grants no license
// (express or implied), right to use, or waiver of any kind with respect to
// the Software, and Broadcom expressly reserves all rights in and to the
// Software and all intellectual property rights therein.  IF YOU HAVE NO
// AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY,
// AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE
// SOFTWARE.  
//
// Except as expressly set forth in the Authorized License,
//
// 1.     This program, including its structure, sequence and organization,
// constitutes the valuable trade secrets of Broadcom, and you shall use all
// reasonable efforts to protect the confidentiality thereof, and to use this
// information only in connection with your use of Broadcom integrated circuit
// products.
//
// 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED
// "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS
// OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH
// RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL
// IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR
// A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET
// ENJOYMENT, QUIET POSSESSION OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME
// THE ENTIRE RISK ARISING OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
//
// 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM
// OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL,
// INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY
// RELATING TO YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM
// HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN
// EXCESS OF THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
// WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY
// FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.
//
// ****************************************************************************
//
//  Filename:         ds_tuner_cz.h
//  Generated by:     RDB Utility
//  Creation Date:    8/7/2008
//  Command Line:     
// ****************************************************************************
//
// IMPORTANT: DO NOT MODIFY, THIS IS AN AUTOGENERATED FILE. 
// Please modify the source .rdb file instead if you need to change this file. 
// Contact Jeff Bauch if you need more information.
//
// ****************************************************************************
#ifndef DS_TUNER_CZ_H__
#define DS_TUNER_CZ_H__


enum DS_REL_TUNER_CZ_on_off {
  DS_REL_TUNER_CZ_on_off_on=0x1,                     
  DS_REL_TUNER_CZ_on_off_off=0x0,                    
};

enum DS_REL_TUNER_CZ_enable_disable {
  DS_REL_TUNER_CZ_enable_disable_enable=0x1,         
  DS_REL_TUNER_CZ_enable_disable_disable=0x0,        
};


typedef union {
  struct {
    uint32 DpmdcFrz                       :1; 
                                              
                                              
    uint32 Reserved                       :1; 
    uint32 Dpmdcbyp                       :1; 
                                              
                                              
    uint32 Dpmcmultbyp                    :1; 
                                              
                                              
    uint32 Dpmfcw                         :24;
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 Dpmdcrst                       :1; 
                                              
                                              
                                              
    uint32 Dpmnotchbwc                    :3; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzDpm;


typedef union {
  struct {
    uint32 Reserved                       :27;
    uint32 ChannelId                      :5; 
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzDpmId;


typedef union {
  struct {
    uint32 Reserved                       :15;
    uint32 FiltcAIsOdd                    :1; 
                                              
                                              
    uint32 Reserved2                      :15;
    uint32 FiltcBIsOdd                    :1; 
                                              
                                              
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzFiltc;


typedef union {
  struct {
    uint32 Reserved                       :4; 
    uint32 CoefAnxa                       :12;
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 Reserved2                      :4; 
    uint32 CoefAnxb                       :12;
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzFiltccoef00;


typedef union {
  struct {
    uint32 Reserved                       :4; 
    uint32 CoefAnxa                       :12;
    uint32 Reserved2                      :4; 
    uint32 CoefAnxb                       :12;
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzFiltccoef01;


typedef union {
  struct {
    uint32 Reserved                       :4; 
    uint32 CoefAnxa                       :12;
    uint32 Reserved2                      :4; 
    uint32 CoefAnxb                       :12;
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzFiltccoef02;


typedef union {
  struct {
    uint32 Reserved                       :4; 
    uint32 CoefAnxa                       :12;
    uint32 Reserved2                      :4; 
    uint32 CoefAnxb                       :12;
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzFiltccoef03;


typedef union {
  struct {
    uint32 Reserved                       :4; 
    uint32 CoefAnxa                       :12;
    uint32 Reserved2                      :4; 
    uint32 CoefAnxb                       :12;
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzFiltccoef04;


typedef union {
  struct {
    uint32 Reserved                       :4; 
    uint32 CoefAnxa                       :12;
    uint32 Reserved2                      :4; 
    uint32 CoefAnxb                       :12;
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzFiltccoef05;


typedef union {
  struct {
    uint32 Reserved                       :4; 
    uint32 CoefAnxa                       :12;
    uint32 Reserved2                      :4; 
    uint32 CoefAnxb                       :12;
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzFiltccoef06;


typedef union {
  struct {
    uint32 Reserved                       :4; 
    uint32 CoefAnxa                       :12;
    uint32 Reserved2                      :4; 
    uint32 CoefAnxb                       :12;
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzFiltccoef07;


typedef union {
  struct {
    uint32 Reserved                       :4; 
    uint32 CoefAnxa                       :12;
    uint32 Reserved2                      :4; 
    uint32 CoefAnxb                       :12;
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzFiltccoef08;


typedef union {
  struct {
    uint32 Reserved                       :4; 
    uint32 CoefAnxa                       :12;
    uint32 Reserved2                      :4; 
    uint32 CoefAnxb                       :12;
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzFiltccoef09;


typedef union {
  struct {
    uint32 Reserved                       :4; 
    uint32 CoefAnxa                       :12;
    uint32 Reserved2                      :4; 
    uint32 CoefAnxb                       :12;
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzFiltccoef10;


typedef union {
  struct {
    uint32 Reserved                       :4; 
    uint32 CoefAnxa                       :12;
    uint32 Reserved2                      :4; 
    uint32 CoefAnxb                       :12;
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzFiltccoef11;


typedef union {
  struct {
    uint32 Reserved                       :4; 
    uint32 CoefAnxa                       :12;
    uint32 Reserved2                      :4; 
    uint32 CoefAnxb                       :12;
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzFiltccoef12;


typedef union {
  struct {
    uint32 Reserved                       :4; 
    uint32 CoefAnxa                       :12;
    uint32 Reserved2                      :4; 
    uint32 CoefAnxb                       :12;
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzFiltccoef13;


typedef union {
  struct {
    uint32 Reserved                       :4; 
    uint32 CoefAnxa                       :12;
    uint32 Reserved2                      :4; 
    uint32 CoefAnxb                       :12;
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzFiltccoef14;


typedef union {
  struct {
    uint32 Reserved                       :4; 
    uint32 CoefAnxa                       :12;
    uint32 Reserved2                      :4; 
    uint32 CoefAnxb                       :12;
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzFiltccoef15;


typedef union {
  struct {
    uint32 Reserved                       :4; 
    uint32 CoefAnxa                       :12;
    uint32 Reserved2                      :4; 
    uint32 CoefAnxb                       :12;
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzFiltccoef16;


typedef union {
  struct {
    uint32 Reserved                       :4; 
    uint32 CoefAnxa                       :12;
    uint32 Reserved2                      :4; 
    uint32 CoefAnxb                       :12;
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzFiltccoef17;


typedef union {
  struct {
    uint32 Reserved                       :2; 
    uint32 Fcw                            :30;
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzQmixFcw;


typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 UseOvRefId                     :1; 
                                              
                                              
                                              
                                              
                                              
    uint32 Reserved2                      :2; 
    uint32 OvRefId                        :5; 
                                              
                                              
                                              
    uint32 Reserved3                      :3; 
    uint32 PrimId                         :5; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzRcvrSrcId;


typedef union {
  struct {
    uint32 Reserved                       :19;
    uint32 IswTpoutId                     :5; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 Reserved2                      :3; 
    uint32 OswTpoutId                     :5; 
                                              
                                              
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzSwhTpoutId;


typedef union {
  struct {
    uint32 Reserved                       :3; 
    uint32 TpoutSel                       :5; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 Reserved2                      :12;
    uint32 Dpm1TpinSel                    :1; 
                                              
                                              
    uint32 Dpm0TpinSel                    :1; 
                                              
                                              
    uint32 Grp1TpinSel                    :1; 
                                              
                                              
    uint32 Grp0TpinSel                    :1; 
                                              
                                              
    uint32 Grp1FiltByp                    :1; 
                                              
                                              
    uint32 Grp0FiltByp                    :1; 
                                              
                                              
    uint32 Grp1MixerByp                   :1; 
                                              
                                              
    uint32 Grp0MixerByp                   :1; 
                                              
                                              
    uint32 Reserved3                      :2; 
    uint32 Sigen                          :1; 
                                              
                                              
    uint32 Sigrst                         :1; 
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  DsRelTunerCzTest;

typedef struct {
  DsRelTunerCzTest                    Test;                    
  uint32                              Siga;                    
  uint8                               Pad0[0x38];
  DsRelTunerCzQmixFcw                 QmixIntaFcw;             
                                                                 
  DsRelTunerCzQmixFcw                 QmixIntbFcw;             
                                                                 
  DsRelTunerCzQmixFcw                 QmixExtaFcw;             
                                                                 
  DsRelTunerCzQmixFcw                 QmixExtbFcw;             
                                                                 
  uint8                               Pad1[0xb0];
  DsRelTunerCzFiltccoef00             Filtccoef00;             
  DsRelTunerCzFiltccoef01             Filtccoef01;             
  DsRelTunerCzFiltccoef02             Filtccoef02;             
  DsRelTunerCzFiltccoef03             Filtccoef03;             
  DsRelTunerCzFiltccoef04             Filtccoef04;             
  DsRelTunerCzFiltccoef05             Filtccoef05;             
  DsRelTunerCzFiltccoef06             Filtccoef06;             
  DsRelTunerCzFiltccoef07             Filtccoef07;             
  DsRelTunerCzFiltccoef08             Filtccoef08;             
  DsRelTunerCzFiltccoef09             Filtccoef09;             
  DsRelTunerCzFiltccoef10             Filtccoef10;             
  DsRelTunerCzFiltccoef11             Filtccoef11;             
  DsRelTunerCzFiltccoef12             Filtccoef12;             
  DsRelTunerCzFiltccoef13             Filtccoef13;             
  DsRelTunerCzFiltccoef14             Filtccoef14;             
  DsRelTunerCzFiltccoef15             Filtccoef15;             
  DsRelTunerCzFiltccoef16             Filtccoef16;             
  DsRelTunerCzFiltccoef17             Filtccoef17;             
  uint8                               Pad2[0x38];
  DsRelTunerCzFiltc                   Filtc;                   
  uint8                               Pad3[0x7c];
  DsRelTunerCzDpmId                   Dpm0Id;                  
  DsRelTunerCzDpm                     Dpm0;                    
  uint32                              Dpm0Dci;                 
  uint32                              Dpm0Dcq;                 
  uint8                               Pad4[0x30];
  DsRelTunerCzDpmId                   Dpm1Id;                  
  DsRelTunerCzDpm                     Dpm1;                    
  uint32                              Dpm1Dci;                 
  uint32                              Dpm1Dcq;                 
  uint8                               Pad5[0xb0];
  DsRelTunerCzRcvrSrcId               Rcvr0SrcId;              
  DsRelTunerCzRcvrSrcId               Rcvr1SrcId;              
  DsRelTunerCzRcvrSrcId               Rcvr2SrcId;              
  DsRelTunerCzRcvrSrcId               Rcvr3SrcId;              
  DsRelTunerCzRcvrSrcId               Rcvr4SrcId;              
  DsRelTunerCzRcvrSrcId               Rcvr5SrcId;              
  DsRelTunerCzRcvrSrcId               Rcvr6SrcId;              
  DsRelTunerCzRcvrSrcId               Rcvr7SrcId;              
  DsRelTunerCzSwhTpoutId              SwhTpoutId;              
}  DsRelTunerCzRegisters;

#endif 



