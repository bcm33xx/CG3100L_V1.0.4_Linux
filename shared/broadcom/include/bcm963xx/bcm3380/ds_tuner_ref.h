// ****************************************************************************
//
// Copyright (c) 2008 Broadcom Corporation
//
// This program is the proprietary software of Broadcom Corporation and/or
// its licensors, and may only be used, duplicated, modified or distributed
// pursuant to the terms and conditions of a separate, written license
// agreement executed between you and Broadcom (an "Authorized License").
// Except as set forth in an Authorized License, Broadcom grants no license
// (express or implied), right to use, or waiver of any kind with respect to
// the Software, and Broadcom expressly reserves all rights in and to the
// Software and all intellectual property rights therein.  IF YOU HAVE NO
// AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY,
// AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE
// SOFTWARE.  
//
// Except as expressly set forth in the Authorized License,
//
// 1.     This program, including its structure, sequence and organization,
// constitutes the valuable trade secrets of Broadcom, and you shall use all
// reasonable efforts to protect the confidentiality thereof, and to use this
// information only in connection with your use of Broadcom integrated circuit
// products.
//
// 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED
// "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS
// OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH
// RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL
// IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR
// A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET
// ENJOYMENT, QUIET POSSESSION OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME
// THE ENTIRE RISK ARISING OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
//
// 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM
// OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL,
// INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY
// RELATING TO YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM
// HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN
// EXCESS OF THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
// WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY
// FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.
//
// ****************************************************************************
//
//  Filename:         ds_tuner_ref.h
//  Generated by:     RDB Utility
//  Creation Date:    8/7/2008
//  Command Line:     
// ****************************************************************************
//
// IMPORTANT: DO NOT MODIFY, THIS IS AN AUTOGENERATED FILE. 
// Please modify the source .rdb file instead if you need to change this file. 
// Contact Jeff Bauch if you need more information.
//
// ****************************************************************************
#ifndef DS_TUNER_REF_H__
#define DS_TUNER_REF_H__


enum DS_REL_TUNER_REF_on_off {
  DS_REL_TUNER_REF_on_off_on=0x1,                    
  DS_REL_TUNER_REF_on_off_off=0x0,                   
};

enum DS_REL_TUNER_REF_enable_disable {
  DS_REL_TUNER_REF_enable_disable_enable=0x1,        
  DS_REL_TUNER_REF_enable_disable_disable=0x0,       
};


typedef union {
  struct {
    uint32 Spare0                         :1; 
    uint32 IClfcnt                        :2; 
    uint32 IVcoPwrup                      :1; 
    uint32 IVcobufLatchOn                 :1; 
    uint32 IDivFbregPwrdn                 :1; 
    uint32 IDiv4Pwrdn                     :1; 
    uint32 IDivFbPwrdn                    :1; 
    uint32 IDivRefbufPwrdn                :1; 
    uint32 IDacDiv2rst                    :1; 
    uint32 IDacDiv4rst                    :1; 
    uint32 IDacFbdivrst                   :1; 
    uint32 IDacVcrst                      :1; 
    uint32 IRefCmlbias                    :2; 
    uint32 IDivFb                         :8; 
    uint32 ILdEn                          :1; 
    uint32 LdResetStrt                    :1; 
    uint32 Spare1                         :1; 
    uint32 Spare2                         :1; 
    uint32 IUgbPwrup                      :1; 
    uint32 IMuxSel                        :2; 
    uint32 IMuxFboff                      :1; 
    uint32 IMuxPwrup                      :1; 
  } Bits;
  uint32 Reg32;
}  DsRelTunerRefRef00;


typedef union {
  struct {
    uint32 Spare0                         :3; 
    uint32 IOutdivPwrdnM                  :7; 
    uint32 IOutdivRegPwrdn                :1; 
    uint32 IOutdivResetM                  :7; 
    uint32 Spare1                         :3; 
    uint32 IQpPwrdn                       :1; 
    uint32 IRegqppfdPwrdn                 :1; 
    uint32 IPfdReset                      :1; 
    uint32 IQpIctrl                       :3; 
    uint32 IPfdDly                        :2; 
    uint32 ILfRcntl                       :3; 
  } Bits;
  uint32 Reg32;
}  DsRelTunerRefRef01;


typedef union {
  struct {
    uint32 Spare0                         :3; 
    uint32 IOutdivM0                      :8; 
    uint32 IClkenM                        :7; 
    uint32 IOutcmosPwrdnM                 :7; 
    uint32 IOutcmlPwrdnM                  :7; 
  } Bits;
  uint32 Reg32;
}  DsRelTunerRefRef02;


typedef union {
  struct {
    uint32 IOutdivM4                      :8; 
    uint32 IOutdivM3                      :8; 
    uint32 IOutdivM2                      :8; 
    uint32 IOutdivM1                      :8; 
  } Bits;
  uint32 Reg32;
}  DsRelTunerRefRef03;


typedef union {
  struct {
    uint32 Spare0                         :4; 
    uint32 GphyClkBypEn                   :1; 
    uint32 ApmClkBypEn                    :1; 
    uint32 IOutcmlDiodePwrdn              :1; 
    uint32 IIgenPwrdn                     :1; 
    uint32 IOutdivIgenPwrdn               :1; 
    uint32 IOutcmlLowcur                  :7; 
    uint32 IOutdivM6                      :8; 
    uint32 IOutdivM5                      :8; 
  } Bits;
  uint32 Reg32;
}  DsRelTunerRefRef04;


typedef union {
  struct {
    uint32 Spare0                         :14;
    uint32 Spare1                         :13;
    uint32 Splitter                       :2; 
    uint32 RfAtt                          :3; 
  } Bits;
  uint32 Reg32;
}  DsRelTunerRefSplit00;

typedef struct {
  DsRelTunerRefRef00                  Ref00;                   
  DsRelTunerRefRef01                  Ref01;                   
  DsRelTunerRefRef02                  Ref02;                   
  DsRelTunerRefRef03                  Ref03;                   
  DsRelTunerRefRef04                  Ref04;                   
  DsRelTunerRefSplit00                Split00;                 
  uint32                              Spare00;                 
}  DsRelTunerRefRegisters;

#endif 



