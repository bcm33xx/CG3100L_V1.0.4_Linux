// ****************************************************************************
//
// Copyright (c) 2008 Broadcom Corporation
//
// This program is the proprietary software of Broadcom Corporation and/or
// its licensors, and may only be used, duplicated, modified or distributed
// pursuant to the terms and conditions of a separate, written license
// agreement executed between you and Broadcom (an "Authorized License").
// Except as set forth in an Authorized License, Broadcom grants no license
// (express or implied), right to use, or waiver of any kind with respect to
// the Software, and Broadcom expressly reserves all rights in and to the
// Software and all intellectual property rights therein.  IF YOU HAVE NO
// AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY,
// AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE
// SOFTWARE.  
//
// Except as expressly set forth in the Authorized License,
//
// 1.     This program, including its structure, sequence and organization,
// constitutes the valuable trade secrets of Broadcom, and you shall use all
// reasonable efforts to protect the confidentiality thereof, and to use this
// information only in connection with your use of Broadcom integrated circuit
// products.
//
// 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED
// "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS
// OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH
// RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL
// IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR
// A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET
// ENJOYMENT, QUIET POSSESSION OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME
// THE ENTIRE RISK ARISING OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
//
// 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM
// OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL,
// INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY
// RELATING TO YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM
// HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN
// EXCESS OF THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
// WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY
// FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.
//
// ****************************************************************************
//
//  Filename:         ds_tuner_digctl.h
//  Generated by:     RDB Utility
//  Creation Date:    8/7/2008
//  Command Line:     
// ****************************************************************************
//
// IMPORTANT: DO NOT MODIFY, THIS IS AN AUTOGENERATED FILE. 
// Please modify the source .rdb file instead if you need to change this file. 
// Contact Jeff Bauch if you need more information.
//
// ****************************************************************************
#ifndef DS_TUNER_DIGCTL_H__
#define DS_TUNER_DIGCTL_H__


enum DS_REL_TUNER_DIGCTL_on_off {
  DS_REL_TUNER_DIGCTL_on_off_on=0x1,                 
  DS_REL_TUNER_DIGCTL_on_off_off=0x0,                
};

enum DS_REL_TUNER_DIGCTL_enable_disable {
  DS_REL_TUNER_DIGCTL_enable_disable_enable=0x1,     
  DS_REL_TUNER_DIGCTL_enable_disable_disable=0x0,    
};


typedef union {
  struct {
    uint32 Reserved                       :17;
    uint32 ReservedForEco                 :4; 
    uint32 TunerUseExtCtrl                :1; 
                                              
                                              
    uint32 TunerPclkEnUseIntReg           :1; 
                                              
                                              
    uint32 ReservedForEco2                :6; 
    uint32 AfeUseTpIn                     :1; 
                                              
                                              
    uint32 AfeUseLocalCtrl                :1; 
                                              
                                              
    uint32 ReservedForEco3                :1; 
  } Bits;
  uint32 Reg32;
}  DsRelTunerDigctlDigctl00;


typedef union {
  struct {
    uint32 LoLf                           :29;
    uint32 ReservedForEco                 :3; 
  } Bits;
  uint32 Reg32;
}  DsRelTunerDigctlDigctl0e;


typedef union {
  struct {
    uint32 Fcw                            :28;
    uint32 Reserved                       :4; 
  } Bits;
  uint32 Reg32;
}  DsRelTunerDigctlDigctl0f;


typedef union {
  struct {
    uint32 ReservedForEco                 :16;
    uint32 Reserved                       :3; 
    uint32 VgaDcoTpinSel                  :1; 
                                              
                                              
                                              
    uint32 Reserved2                      :1; 
    uint32 VgaDcoOutEdgeSel               :1; 
                                              
                                              
    uint32 VgaDcoGainLimitOn              :1; 
                                              
                                              
                                              
                                              
    uint32 VgaDcoTwosComp                 :1; 
                                              
                                              
                                              
                                              
    uint32 VgaDcoOutInvEnQ                :1; 
                                              
                                              
                                              
                                              
    uint32 VgaDcoOutInvEnI                :1; 
                                              
                                              
                                              
                                              
    uint32 VgaDcoOutFrz                   :1; 
                                              
                                              
    uint32 VgaDcoHysDecSel                :1; 
                                              
                                              
                                              
                                              
    uint32 VgaDcoHysDecRate               :4; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  DsRelTunerDigctlDigctl14;


typedef union {
  struct {
    uint32 UseMicroVgaDco                 :1; 
                                              
                                              
                                              
    uint32 Reserved                       :18;
    uint32 VgaDcoErrQMicro                :5; 
                                              
                                              
                                              
    uint32 ReservedForEco                 :3; 
    uint32 VgaDcoErrIMicro                :5; 
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  DsRelTunerDigctlDigctl15;


typedef union {
  struct {
    uint32 Reserved                       :19;
    uint32 VgaDcoErrQ                     :5; 
    uint32 Reserved2                      :3; 
    uint32 VgaDcoErrI                     :5; 
  } Bits;
  uint32 Reg32;
}  DsRelTunerDigctlDigctl16;


typedef union {
  struct {
    uint32 VgaDcoTpinSel                  :1; 
                                              
                                              
                                              
    uint32 Reserved                       :14;
    uint32 VgaDcoOutSel                   :5; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 VgaDcoInInvEnQ                 :1; 
                                              
                                              
                                              
    uint32 VgaDcoInInvEnI                 :1; 
                                              
                                              
                                              
    uint32 VgaDcoInDestag                 :1; 
                                              
                                              
                                              
    uint32 VgaDcoBwc                      :5; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 Reserved2                      :2; 
    uint32 VgaDcoRst                      :1; 
    uint32 VgaDcoFrz                      :1; 
  } Bits;
  uint32 Reg32;
}  DsRelTunerDigctlDigctl17;


typedef union {
  struct {
    uint32 VgaDpdSelQ                     :1; 
                                              
    uint32 VgaDpdSelI                     :1; 
                                              
    uint32 Reserved                       :7; 
    uint32 VgaDcoPdQ                      :11;
                                              
    uint32 Reserved2                      :1; 
    uint32 VgaDcoPdI                      :11;
                                              
  } Bits;
  uint32 Reg32;
}  DsRelTunerDigctlDigctl1a;


typedef union {
  struct {
    uint32 DcocClkDiv                     :3; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 ReservedForEco                 :5; 
    uint32 MxrDcoIntCoef                  :4; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 Reserved                       :3; 
    uint32 MxrDcoLinCoef                  :5; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 Reserved2                      :1; 
    uint32 MxrDcoOutEdgeSel               :1; 
                                              
                                              
    uint32 MxrDcoOutInvEnQ                :1; 
                                              
                                              
                                              
                                              
    uint32 MxrDcoOutInvEnI                :1; 
                                              
                                              
                                              
                                              
    uint32 MxrDcoAdcBypEn                 :1; 
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 MxrDcoInSel                    :1; 
                                              
                                              
                                              
    uint32 Reserved3                      :1; 
    uint32 MxrDcoUpdateAdcRate            :1; 
                                              
                                              
    uint32 MxrDcoInEdgeSel                :1; 
                                              
                                              
                                              
                                              
    uint32 MxrDcoInInvEnQ                 :1; 
                                              
                                              
                                              
    uint32 MxrDcoInInvEnI                 :1; 
                                              
                                              
                                              
    uint32 MxrDcoOutFrz                   :1; 
                                              
                                              
  } Bits;
  uint32 Reg32;
}  DsRelTunerDigctlDigctl20;


typedef union {
  struct {
    uint32 Reserved                       :31;
    uint32 MxrDcoGblFrz                   :1; 
                                              
                                              
  } Bits;
  uint32 Reg32;
}  DsRelTunerDigctlDigctl21;


typedef union {
  struct {
    uint32 Reserved                       :9; 
    uint32 MxrDcoDelsigIntI               :23;
  } Bits;
  uint32 Reg32;
}  DsRelTunerDigctlDigctl28;


typedef union {
  struct {
    uint32 Reserved                       :9; 
    uint32 MxrDcoDelsigIntQ               :23;
  } Bits;
  uint32 Reg32;
}  DsRelTunerDigctlDigctl29;


typedef union {
  struct {
    uint32 LfShiftCtl                     :3; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 ReservedForEco                 :21;
    uint32 LeSel                          :2; 
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 DdfsTpEn                       :1; 
                                              
                                              
                                              
                                              
    uint32 TunerClEn                      :1; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 TunerClInv                     :1; 
                                              
                                              
                                              
                                              
                                              
    uint32 ReservedForEco2                :2; 
    uint32 DdfsTwosCompEn                 :1; 
                                              
                                              
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  DsRelTunerDigctlDigctl30;


typedef union {
  struct {
    uint32 ReservedForEco                 :24;
    uint32 DdfsCoreSrst                   :1; 
                                              
                                              
                                              
    uint32 ReservedForEco2                :3; 
    uint32 ClkVafeEn                      :1; 
                                              
                                              
    uint32 ClkQdsafeEn                    :1; 
                                              
                                              
    uint32 ClkVgaDcoEn                    :1; 
                                              
                                              
    uint32 ClkMxrDcoEn                    :1; 
                                              
                                              
  } Bits;
  uint32 Reg32;
}  DsRelTunerDigctlDigctl40;


typedef union {
  struct {
    uint32 Reserved                       :27;
    uint32 DdfsBypClkEn                   :1; 
                                              
                                              
                                              
                                              
    uint32 TestEnClkVafe                  :1; 
                                              
                                              
    uint32 TestEnClkQdsafe                :1; 
                                              
                                              
    uint32 TestEnClkVgaDco                :1; 
                                              
                                              
    uint32 TestEnClkMxrDco                :1; 
                                              
                                              
  } Bits;
  uint32 Reg32;
}  DsRelTunerDigctlDigctl41;

typedef struct {
  uint8                               Pad0[0x100];
  DsRelTunerDigctlDigctl00            Digctl00;                
  uint8                               Pad1[0x4c];
  DsRelTunerDigctlDigctl14            Digctl14;                
  DsRelTunerDigctlDigctl15            Digctl15;                
  DsRelTunerDigctlDigctl16            Digctl16;                
  DsRelTunerDigctlDigctl17            Digctl17;                
  uint32                              Digctl18;                
  uint32                              Digctl19;                
  DsRelTunerDigctlDigctl1a            Digctl1a;                
  uint8                               Pad2[0x94];
  DsRelTunerDigctlDigctl20            Digctl20;                
  DsRelTunerDigctlDigctl21            Digctl21;                
  uint32                              Digctl22;                
  uint32                              Digctl23;                
  uint32                              Digctl24;                
  uint32                              Digctl25;                
  uint32                              Digctl26;                
  uint32                              Digctl27;                
  DsRelTunerDigctlDigctl28            Digctl28;                
  DsRelTunerDigctlDigctl29            Digctl29;                
  uint8                               Pad3[0x58];
  DsRelTunerDigctlDigctl0e            Digctl0e;                
  DsRelTunerDigctlDigctl0f            Digctl0f;                
  DsRelTunerDigctlDigctl30            Digctl30;                
  uint8                               Pad4[0x74];
  DsRelTunerDigctlDigctl40            Digctl40;                
  DsRelTunerDigctlDigctl41            Digctl41;                
}  DsRelTunerDigctlRegisters;

#endif 



