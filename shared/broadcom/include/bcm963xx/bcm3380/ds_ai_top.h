// ****************************************************************************
//
// Copyright (c) 2008 Broadcom Corporation
//
// This program is the proprietary software of Broadcom Corporation and/or
// its licensors, and may only be used, duplicated, modified or distributed
// pursuant to the terms and conditions of a separate, written license
// agreement executed between you and Broadcom (an "Authorized License").
// Except as set forth in an Authorized License, Broadcom grants no license
// (express or implied), right to use, or waiver of any kind with respect to
// the Software, and Broadcom expressly reserves all rights in and to the
// Software and all intellectual property rights therein.  IF YOU HAVE NO
// AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY,
// AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE
// SOFTWARE.  
//
// Except as expressly set forth in the Authorized License,
//
// 1.     This program, including its structure, sequence and organization,
// constitutes the valuable trade secrets of Broadcom, and you shall use all
// reasonable efforts to protect the confidentiality thereof, and to use this
// information only in connection with your use of Broadcom integrated circuit
// products.
//
// 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED
// "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS
// OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH
// RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL
// IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR
// A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET
// ENJOYMENT, QUIET POSSESSION OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME
// THE ENTIRE RISK ARISING OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
//
// 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM
// OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL,
// INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY
// RELATING TO YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM
// HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN
// EXCESS OF THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
// WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY
// FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.
//
// ****************************************************************************
//
//  Filename:         ds_ai_top.h
//  Generated by:     RDB Utility
//  Creation Date:    8/7/2008
//  Command Line:     
// ****************************************************************************
//
// IMPORTANT: DO NOT MODIFY, THIS IS AN AUTOGENERATED FILE. 
// Please modify the source .rdb file instead if you need to change this file. 
// Contact Jeff Bauch if you need more information.
//
// ****************************************************************************
#ifndef DS_AI_TOP_H__
#define DS_AI_TOP_H__





enum DS_REL_AI_TOP_on_off {
  DS_REL_AI_TOP_on_off_on=0x1,                       
  DS_REL_AI_TOP_on_off_off=0x0,                      
};

enum DS_REL_AI_TOP_enable_disable {
  DS_REL_AI_TOP_enable_disable_enable=0x1,           
  DS_REL_AI_TOP_enable_disable_disable=0x0,          
};

enum DS_REL_AI_TOP_write_read {
  DS_REL_AI_TOP_write_read_write=0x1,                
  DS_REL_AI_TOP_write_read_read=0x0,                 
};

enum DS_REL_AI_TOP_lbist_mode {
  DS_REL_AI_TOP_lbist_mode_hold=0x0,                 
  DS_REL_AI_TOP_lbist_mode_pipe=0x1,                 
  DS_REL_AI_TOP_lbist_mode_lfsr=0x2,                 
  DS_REL_AI_TOP_lbist_mode_crc=0x3,                  
};

enum DS_REL_AI_TOP_filter {
  DS_REL_AI_TOP_filter_none=0x0,                     
  DS_REL_AI_TOP_filter_vplpf=0x1,                    
  DS_REL_AI_TOP_filter_vpnqst=0x2,                   
  DS_REL_AI_TOP_filter_vpgdly=0x3,                   
  DS_REL_AI_TOP_filter_vptrap=0x4,                   
  DS_REL_AI_TOP_filter_reserved=0x5,                 
  DS_REL_AI_TOP_filter_aptba=0x6,                    
  DS_REL_AI_TOP_filter_aplpfb=0x7,                   
  DS_REL_AI_TOP_filter_aptbc=0x8,                    
};

enum DS_REL_AI_TOP_done_running {
  DS_REL_AI_TOP_done_running_done=0x1,               
  DS_REL_AI_TOP_done_running_running=0x0,            
};


typedef union {
  struct {
    uint32 DsGpFcnt                       :8; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 DsRfFcnt                       :8; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 DsIfFcnt                       :8; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 Reserved                       :8; 
  } Bits;
  uint32 Reg32;
}  DsRelAiTopAiAdsfcnt;


typedef union {
  struct {
    uint32 IfDelsigIn                     :16;
                                              
    uint32 RfDelsigIn                     :16;
                                              
  } Bits;
  uint32 Reg32;
}  DsRelAiTopAiAdsg;


typedef union {
  struct {
    uint32 Reserved                       :3; 
    uint32 BypassRf                       :1; 
    uint32 BypassIf                       :1; 
    uint32 FixedGpDsi                     :1; 
    uint32 FixedRfDsi                     :1; 
    uint32 FixedIfDsi                     :1; 
    uint32 InvIfThrc                      :1; 
                                              
    uint32 InvRfThrc                      :1; 
                                              
    uint32 Sqrmode                        :2; 
                                              
                                              
                                              
                                              
    uint32 Reserved2                      :1; 
    uint32 Tunavgsel                      :1; 
                                              
                                              
    uint32 ReservedForEco                 :6; 
    uint32 Agctpos                        :1; 
                                              
                                              
    uint32 Agcgppos                       :1; 
                                              
                                              
    uint32 Reserved3                      :1; 
    uint32 Agctrst                        :1; 
                                              
                                              
                                              
    uint32 Pgatst                         :1; 
                                              
                                              
    uint32 Agcf                           :1; 
                                              
                                              
                                              
                                              
    uint32 Agctz                          :1; 
                                              
                                              
    uint32 Agciz                          :1; 
                                              
                                              
    uint32 Agcipos                        :1; 
                                              
                                              
    uint32 Reserved4                      :2; 
    uint32 Agcirst                        :1; 
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  DsRelAiTopAiAgc1;


typedef union {
  struct {
    uint32 Reserved                       :11;
    uint32 Agcifbw                        :5; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 Agcifthres                     :16;
  } Bits;
  uint32 Reg32;
}  DsRelAiTopAiAgc2;


typedef union {
  struct {
    uint32 UseExtTuner                    :1; 
                                              
                                              
    uint32 Reserved                       :10;
    uint32 Agctnbw                        :5; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 Agctnthres                     :16;
  } Bits;
  uint32 Reg32;
}  DsRelAiTopAiAgc3;


typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 Agcidsval                      :16;
  } Bits;
  uint32 Reg32;
}  DsRelAiTopAiAgcidi;


typedef union {
  struct {
    uint32 Agcilval                       :29;
    uint32 Reserved                       :3; 
  } Bits;
  uint32 Reg32;
}  DsRelAiTopAiAgcili;


typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 Agctdsval                      :16;
  } Bits;
  uint32 Reg32;
}  DsRelAiTopAiAgctdi;


typedef union {
  struct {
    uint32 Reserved                       :18;
    uint32 SelDelsigGp                    :2; 
                                              
                                              
                                              
                                              
    uint32 SelDelsigIf                    :2; 
                                              
                                              
                                              
                                              
    uint32 SelDelsigRf                    :2; 
                                              
                                              
                                              
                                              
    uint32 IfOdCtrl                       :1; 
                                              
                                              
    uint32 RfOdCtrl                       :1; 
                                              
                                              
    uint32 GpOdCtrl                       :1; 
                                              
                                              
    uint32 Gdsrst                         :1; 
                                              
                                              
                                              
    uint32 Agctfrz                        :1; 
                                              
                                              
    uint32 Agcifrz                        :1; 
                                              
                                              
    uint32 AgcsnrUse                      :1; 
                                              
                                              
                                              
    uint32 AgcDis                         :1; 
  } Bits;
  uint32 Reg32;
}  DsRelAiTopAiAgcMisc;


typedef union {
  struct {
    uint32 Reserved                       :1; 
    uint32 RfSatd                         :1; 
    uint32 IfSatd                         :1; 
    uint32 Reserved2                      :1; 
    uint32 FrzRf                          :1; 
    uint32 FrzIf                          :1; 
    uint32 Reserved3                      :2; 
    uint32 RfSatUp1Low0                   :1; 
    uint32 IfSatUp1Low0                   :1; 
    uint32 Reserved4                      :22;
  } Bits;
  uint32 Reg32;
}  DsRelAiTopAiAlbk;


typedef union {
  struct {
    uint32 Reserved                       :15;
    uint32 PdBeta                         :2; 
                                              
                                              
                                              
                                              
                                              
    uint32 Reserved2                      :2; 
    uint32 AgcTpSel                       :4; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 Reserved3                      :9; 
  } Bits;
  uint32 Reg32;
}  DsRelAiTopAiAltMisc;


typedef union {
  struct {
    uint32 Reserved                       :8; 
    uint32 AiClipd                        :24;
                                              
                                              
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  DsRelAiTopAiClipd;


typedef union {
  struct {
    uint32 Reserved                       :8; 
    uint32 AiClipdQ                       :24;
                                              
                                              
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  DsRelAiTopAiClipdQ;


typedef union {
  struct {
    uint32 Reserved                       :19;
    uint32 InFmt                          :1; 
                                              
                                              
    uint32 FifoByp                        :1; 
                                              
                                              
                                              
                                              
    uint32 BypAnlgHandoff                 :1; 
                                              
                                              
                                              
                                              
    uint32 EdgeSel                        :1; 
                                              
                                              
    uint32 Reserved2                      :9; 
  } Bits;
  uint32 Reg32;
}  DsRelAiTopAiCtl;


typedef union {
  struct {
    uint32 Reserved                       :23;
    uint32 AiDcocBwc                      :5; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 AiDcocLprstQ                   :1; 
                                              
    uint32 AiDcocLpfrzQ                   :1; 
    uint32 AiDcocLprstI                   :1; 
                                              
    uint32 AiDcocLpfrzI                   :1; 
  } Bits;
  uint32 Reg32;
}  DsRelAiTopAiDcoc;


typedef union {
  struct {
    uint32 AiDcopdSelI                    :1; 
                                              
    uint32 AiDcopdSelQ                    :1; 
                                              
    uint32 Reserved                       :6; 
    uint32 AiDcopdQ                       :12;
                                              
    uint32 AiDcopdI                       :12;
                                              
  } Bits;
  uint32 Reg32;
}  DsRelAiTopAiDcopd;


typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 AiGdi                          :16;
  } Bits;
  uint32 Reg32;
}  DsRelAiTopAiGdi;


typedef union {
  struct {
    uint32 UseLog2                        :1; 
    uint32 Reserved                       :3; 
    uint32 Sigrst                         :1; 
                                              
                                              
    uint32 Sigen                          :1; 
                                              
                                              
    uint32 Pnrst                          :1; 
                                              
                                              
                                              
    uint32 Pnen                           :1; 
                                              
                                              
    uint32 Reserved2                      :3; 
    uint32 TpoutSel                       :4; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 PdBeta                         :2; 
                                              
                                              
                                              
                                              
                                              
    uint32 Reserved3                      :1; 
    uint32 RstFifo                        :1; 
    uint32 AgcTpSel                       :4; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 Bypad                          :1; 
                                              
                                              
                                              
                                              
    uint32 Reserved4                      :1; 
    uint32 GpLfEn                         :2; 
                                              
                                              
                                              
                                              
    uint32 AgcLfEn                        :2; 
                                              
                                              
                                              
                                              
    uint32 DelsigClkdiv                   :3; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  DsRelAiTopAiMisc;


typedef union {
  struct {
    uint32 GpRtzEn                        :1; 
    uint32 RfRtzEn                        :1; 
    uint32 IfRtzEn                        :1; 
    uint32 Reserved                       :10;
    uint32 SelAsigdelGp                   :1; 
                                              
                                              
    uint32 SelAsigdelRf                   :1; 
                                              
                                              
    uint32 SelAsigdelIf                   :1; 
                                              
                                              
    uint32 InvRfMsb                       :1; 
                                              
    uint32 InvIfMsb                       :1; 
                                              
    uint32 Reserved2                      :2; 
    uint32 RfEnSel                        :1; 
                                              
                                              
                                              
    uint32 IfEnSel                        :1; 
                                              
                                              
                                              
    uint32 Reserved3                      :3; 
    uint32 SelSigdel                      :2; 
                                              
                                              
                                              
                                              
                                              
    uint32 Reserved4                      :1; 
    uint32 FedeDCoef                      :3; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 Reserved5                      :1; 
  } Bits;
  uint32 Reg32;
}  DsRelAiTopAiMisctl;


typedef union {
  struct {
    uint32 Reserved                       :6; 
    uint32 Pgasel                         :2; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 Reserved2                      :4; 
    uint32 PgaGainInv                     :1; 
                                              
                                              
    uint32 Pgagain                        :11;
                                              
    uint32 Pgahys                         :4; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 Pgadec                         :4; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  DsRelAiTopAiPga;


typedef union {
  struct {
    uint32 Reserved                       :17;
    uint32 Pgadecval                      :15;
  } Bits;
  uint32 Reg32;
}  DsRelAiTopAiPgadi;


typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 Pgahysval                      :16;
  } Bits;
  uint32 Reg32;
}  DsRelAiTopAiPgahi;


typedef union {
  struct {
    uint32 Reserved                       :7; 
    uint32 TpinIqSel                      :1; 
    uint32 GpdsLfinRegwSel                :1; 
    uint32 GpdsLfinESel                   :1; 
                                              
    uint32 GpdsLfTpinSel                  :1; 
                                              
    uint32 GpdsTmuxSel                    :3; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 Reserved2                      :2; 
    uint32 TpinAfifoSel                   :1; 
                                              
    uint32 Reserved3                      :5; 
    uint32 AgcLfinRegwSel                 :1; 
    uint32 Reserved4                      :1; 
    uint32 AgcLfTpin                      :1; 
                                              
    uint32 Reserved5                      :1; 
    uint32 AdcTpIn                        :1; 
                                              
    uint32 Reserved6                      :1; 
    uint32 LoopbackM1                     :1; 
                                              
    uint32 Reserved7                      :3; 
  } Bits;
  uint32 Reg32;
}  DsRelAiTopAiTmuxc;

typedef struct {
  DsRelAiTopAiMisc                    Misc;                    
  DsRelAiTopAiCtl                     Ctl;                     
  DsRelAiTopAiClipd                   Clipd;                   
  DsRelAiTopAiClipdQ                  ClipdQ;                  
  DsRelAiTopAiDcoc                    Dcoc;                    
  uint32                              Ifdci;                   
  uint8                               Pad0[0x4];
  DsRelAiTopAiTmuxc                   Tmuxc;                   
  uint32                              Sig;                     
  uint32                              Spare1;                  
  uint32                              Spare2;                  
  uint8                               Pad1[0x4];
  uint32                              IfdciQ;                  
  DsRelAiTopAiDcopd                   Dcopd;                   
                                                                 
  uint8                               Pad2[0x48];
  DsRelAiTopAiAgc1                    Agc1;                    
  DsRelAiTopAiAgc2                    Agc2;                    
  DsRelAiTopAiAgc3                    Agc3;                    
  uint32                              Agcii;                   
  uint8                               Pad3[0x4];
  DsRelAiTopAiPga                     Pga;                     
  DsRelAiTopAiPgadi                   Pgadi;                   
  DsRelAiTopAiPgahi                   Pgahi;                   
  DsRelAiTopAiAgcili                  Agcili;                  
  DsRelAiTopAiAgcidi                  Agcidi;                  
  uint32                              Agcti;                   
  uint8                               Pad4[0x4];
  DsRelAiTopAiAgctdi                  Agctdi;                  
  DsRelAiTopAiGdi                     Gdi;                     
  DsRelAiTopAiAgcMisc                 AgcMisc;                 
  uint8                               Pad5[0x4];
  uint32                              Aifut;                   
  uint32                              Arfut;                   
  uint32                              Aiflt;                   
  uint32                              Arflt;                   
  DsRelAiTopAiAdsfcnt                 Adsfcnt;                 
  DsRelAiTopAiMisctl                  Misctl;                  
  uint8                               Pad6[0x18];
  DsRelAiTopAiAlbk                    Albk;                    
  DsRelAiTopAiAdsg                    Adsg;                    
  uint8                               Pad7[0x108];
  DsRelAiTopAiAltMisc                 AltMisc;                 
  DsRelAiTopAiMisctl                  AltMisctl;               
  DsRelAiTopAiAgcMisc                 AltAgcMisc;              
  DsRelAiTopAiAgc1                    AltAgc1;                 
  DsRelAiTopAiAgc2                    AltAgc2;                 
  DsRelAiTopAiAgc3                    AltAgc3;                 
  uint32                              AltAifut;                
  uint32                              AltArfut;                
  uint32                              AltAiflt;                
  uint32                              AltArflt;                
  DsRelAiTopAiPga                     AltPga;                  
  DsRelAiTopAiAdsg                    AltAdsg;                 
  DsRelAiTopAiGdi                     AltGdi;                  
  DsRelAiTopAiAdsfcnt                 AltAdsfcnt;              
  uint32                              AltAgcii;                
  DsRelAiTopAiPgahi                   AltPgahi;                
  DsRelAiTopAiPgadi                   AltPgadi;                
  uint32                              AltAgcti;                
  DsRelAiTopAiAlbk                    AltAlbk;                 
  DsRelAiTopAiAgcidi                  AltAgcidi;               
  DsRelAiTopAiAgctdi                  AltAgctdi;               
}  DsRelAiTopRegisters;

#endif 



