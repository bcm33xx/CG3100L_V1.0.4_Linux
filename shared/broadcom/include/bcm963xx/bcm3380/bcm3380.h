// ****************************************************************************
//
// Copyright (c) 2008 Broadcom Corporation
//
// This program is the proprietary software of Broadcom Corporation and/or
// its licensors, and may only be used, duplicated, modified or distributed
// pursuant to the terms and conditions of a separate, written license
// agreement executed between you and Broadcom (an "Authorized License").
// Except as set forth in an Authorized License, Broadcom grants no license
// (express or implied), right to use, or waiver of any kind with respect to
// the Software, and Broadcom expressly reserves all rights in and to the
// Software and all intellectual property rights therein.  IF YOU HAVE NO
// AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY,
// AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE
// SOFTWARE.  
//
// Except as expressly set forth in the Authorized License,
//
// 1.     This program, including its structure, sequence and organization,
// constitutes the valuable trade secrets of Broadcom, and you shall use all
// reasonable efforts to protect the confidentiality thereof, and to use this
// information only in connection with your use of Broadcom integrated circuit
// products.
//
// 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED
// "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS
// OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH
// RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL
// IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR
// A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET
// ENJOYMENT, QUIET POSSESSION OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME
// THE ENTIRE RISK ARISING OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
//
// 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM
// OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL,
// INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY
// RELATING TO YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM
// HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN
// EXCESS OF THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
// WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY
// FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.
//
// ****************************************************************************
//
//  Filename:         bcm3380.h
//  Generated by:     RDB Utility
//  Creation Date:    8/7/2008
//  Command Line:     
// ****************************************************************************
//
// IMPORTANT: DO NOT MODIFY, THIS IS AN AUTOGENERATED FILE. 
// Please modify the source .rdb file instead if you need to change this file. 
// Contact Jeff Bauch if you need more information.
//
// ****************************************************************************
#ifndef BCM3380_H__
#define BCM3380_H__

#include "bridge_blockdef.h"
#include "unimac.h"
#include "usmac30_blockdef.h"
#include "ddr_top_blockdef.h"
#include "fap_blockdef.h"
#include "ds_top.h"
#include "davic_blockdef.h"
#include "periph_blockdef.h"
#include "legacy_mac_blockdef.h"
#include "tc_blockdef.h"
#include "crypto_blockdef.h"
#include "pico_imem_blockdef.h"
#include "hs_spim_blockdef.h"
#include "utp_blockdef.h"
#include "us_regs.h"
#include "apm_blockdef.h"
#include "bmu_blockdef.h"
#include "pcie_blockdef.h"
#include "dtp_blockdef.h"
#include "usb_otg_blockdef.h"
#include "spim_blockdef.h"
#include "oob_blockdef.h"
#include "downstream_blockdef.h"
#include "fpm_blockdef.h"
#include "segdma_blockdef.h"

typedef struct {
  union {
    struct {
      uint8                      Pad0[0x12000000];
      DdrTop                     DdrBlock;
    } ;
    struct {
      uint8                      Pad1[0x12010000];
      Fpm                        FpmBlock;
    } ;
    struct {
      uint8                      Pad2[0x12020000];
      LegacyMac1                 LegacyMacBlock;
    } ;
    struct {
      uint8                      Pad3[0x12030000];
      SegdmaBlockSegdmaBlock     SegdmaBlock;
    } ;
    struct {
      uint8                      Pad4[0x12034000];
      TcTop                      TcBlock0;
    } ;
    struct {
      uint8                      Pad5[0x12035000];
      TcTop                      TcBlock1;
    } ;
    struct {
      uint8                      Pad6[0x12036000];
      TcTop                      TcBlock2;
    } ;
    struct {
      uint8                      Pad7[0x12037000];
      TcTop                      TcBlock3;
    } ;
    struct {
      uint8                      Pad8[0x12038000];
      Usmac30BlockUsmac301       Usmac30Block;
    } ;
    struct {
      uint8                      Pad9[0x1203c000];
      Us                         UsBlock;
    } ;
    struct {
      uint8                      Pad10[0x12040000];
      CryptoBlockCryptoBlock     CryptoBlock;
    } ;
    struct {
      uint8                      Pad11[0x12070000];
      Bridge                     BridgeBlock;
    } ;
    struct {
      uint8                      Pad12[0x12100000];
      Unimac                     UnimacBlock0;
    } ;
    struct {
      uint8                      Pad13[0x12110000];
      Unimac                     UnimacBlock1;
    } ;
    struct {
      uint8                      Pad14[0x12120000];
      Davic                      DavicBlock;
    } ;
    struct {
      uint8                      Pad15[0x14000000];
      UtpBlockUtpBlock           UtpBlock;
    } ;
    struct {
      uint8                      Pad16[0x14200000];
      DtpBlockDtpBlock           DtpBlock;
    } ;
    struct {
      uint8                      Pad17[0x14400000];
      FapBlockFapBlock           FapBlock;
    } ;
    struct {
      uint8                      Pad18[0x14600000];
      FapBlockFapBlock           MepBlock;
    } ;
    struct {
      uint8                      Pad19[0x14c00000];
      Dsmac30                    Dsmac30Block;
    } ;
    struct {
      uint8                      Pad20[0x14c10000];
      DsTop                      DsTopBlock;
    } ;
    struct {
      uint8                      Pad21[0x14c30000];
      OobTop                     OobTopBlock;
    } ;
    struct {
      uint8                      Pad22[0x14e00000];
      Periph                     PeriphBlock;
    } ;
    struct {
      uint8                      Pad23[0x14e00400];
      SpiMaster                  SpiMasterBlock;
    } ;
    struct {
      uint8                      Pad24[0x15000000];
      UsbOtgSingle               UsbOtgBlock0;
    } ;
    struct {
      uint8                      Pad25[0x15200000];
      UsbOtgSingle               UsbOtgBlock1;
    } ;
    struct {
      uint8                      Pad26[0x15400000];
      Apm                        ApmBlock;
    } ;
    struct {
      uint8                      Pad27[0x15401000];
      Bmu                        BmuBlock;
    } ;
    struct {
      uint8                      Pad28[0x15410000];
      PicoImem                   PicoImemBlock;
    } ;
    struct {
      uint8                      Pad29[0x15800000];
      FapBlockFapBlock           MspBlock;
    } ;
  };
}  Bcm3380A0;

#endif 



