// ****************************************************************************
//
// Copyright (c) 2008 Broadcom Corporation
//
// This program is the proprietary software of Broadcom Corporation and/or
// its licensors, and may only be used, duplicated, modified or distributed
// pursuant to the terms and conditions of a separate, written license
// agreement executed between you and Broadcom (an "Authorized License").
// Except as set forth in an Authorized License, Broadcom grants no license
// (express or implied), right to use, or waiver of any kind with respect to
// the Software, and Broadcom expressly reserves all rights in and to the
// Software and all intellectual property rights therein.  IF YOU HAVE NO
// AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY,
// AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE
// SOFTWARE.  
//
// Except as expressly set forth in the Authorized License,
//
// 1.     This program, including its structure, sequence and organization,
// constitutes the valuable trade secrets of Broadcom, and you shall use all
// reasonable efforts to protect the confidentiality thereof, and to use this
// information only in connection with your use of Broadcom integrated circuit
// products.
//
// 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED
// "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS
// OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH
// RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL
// IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR
// A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET
// ENJOYMENT, QUIET POSSESSION OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME
// THE ENTIRE RISK ARISING OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
//
// 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM
// OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL,
// INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY
// RELATING TO YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM
// HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN
// EXCESS OF THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
// WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY
// FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.
//
// ****************************************************************************
//
//  Filename:         davic_reg.h
//  Generated by:     RDB Utility
//  Creation Date:    8/7/2008
//  Command Line:     
// ****************************************************************************
//
// IMPORTANT: DO NOT MODIFY, THIS IS AN AUTOGENERATED FILE. 
// Please modify the source .rdb file instead if you need to change this file. 
// Contact Jeff Bauch if you need more information.
//
// ****************************************************************************
#ifndef DAVIC_REG_H__
#define DAVIC_REG_H__


enum DAVICMAC_SIZE_BASE {
  DAVICMAC_SIZE_BASE_SIZE_8KB=0x0,                   
  DAVICMAC_SIZE_BASE_SIZE_16KB=0x1,                  
  DAVICMAC_SIZE_BASE_SIZE_32KB=0x2,                  
  DAVICMAC_SIZE_BASE_SIZE_64KB=0x3,                  
  DAVICMAC_SIZE_BASE_SIZE_128KB=0x4,                 
  DAVICMAC_SIZE_BASE_SIZE_256KB=0x5,                 
  DAVICMAC_SIZE_BASE_SIZE_512KB=0x6,                 
  DAVICMAC_SIZE_BASE_SIZE_1MB=0x7,                   
  DAVICMAC_SIZE_BASE_SIZE_2MB=0x8,                   
  DAVICMAC_SIZE_BASE_SIZE_4MB=0x9,                   
  DAVICMAC_SIZE_BASE_SIZE_8MB=0xa,                   
  DAVICMAC_SIZE_BASE_SIZE_16MB=0xb,                  
  DAVICMAC_SIZE_BASE_SIZE_32MB=0xc,                  
  DAVICMAC_SIZE_BASE_SIZE_64MB=0xd,                  
  DAVICMAC_SIZE_BASE_SIZE_128MB=0xe,                 
  DAVICMAC_SIZE_BASE_SIZE_256MB=0xf,                 
};


typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 StartMask                      :4; 
    uint32 StartPt                        :3; 
    uint32 StartClp                       :1; 
    uint32 EndMask                        :4; 
    uint32 EndPt                          :3; 
    uint32 EndClp                         :1; 
  } Bits;
  uint32 Reg32;
}  DavicmacAtmPt;


typedef union {
  struct {
    uint32 Gfc                            :4; 
    uint32 Vpi                            :8; 
    uint32 Vci                            :16;
    uint32 Pt                             :3; 
    uint32 Clp                            :1; 
  } Bits;
  uint32 Reg32;
}  DavicmacAtmVpiVci;


typedef union {
  struct {
    uint32 MbitsValid                     :1; 
    uint32 Mbits                          :12;
    uint32 Reserved                       :1; 
    uint32 Rn2SlotInd                     :1; 
    uint32 Rn2ResvCtrl                    :2; 
    uint32 Rn2SlotBndry                   :6; 
    uint32 Rn1SlotInd                     :1; 
    uint32 Rn1ResvCtrl                    :2; 
    uint32 Rn1SlotBndry                   :6; 
  } Bits;
  uint32 Reg32;
}  DavicmacBdf;


typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 SlotCount                      :16;
  } Bits;
  uint32 Reg32;
}  DavicmacContentionCounter;


typedef union {
  struct {
    uint32 TotalMatches1                  :16;
    uint32 TotalMatches2                  :16;
  } Bits;
  uint32 Reg32;
}  DavicmacCounterAtm;


typedef union {
  struct {
    uint32 TotalMacMatches                :16;
    uint32 TotalIpMatches                 :16;
  } Bits;
  uint32 Reg32;
}  DavicmacCounterSar;


typedef union {
  struct {
    uint32 OverflowCount                  :16;
    uint32 TransmittedCount               :16;
  } Bits;
  uint32 Reg32;
}  DavicmacCounterTxFlow;


typedef union {
  struct {
    uint32 Reserved                       :1; 
    uint32 RangingSlot                    :1; 
    uint32 ContentionSlot                 :1; 
    uint32 ReservedSlot                   :1; 
    uint32 FixedSlot                      :1; 
    uint32 FixedrateSlot                  :1; 
    uint32 Reserved2                      :5; 
    uint32 RelSlotNumber                  :5; 
    uint32 BaseSlotNumber                 :16;
  } Bits;
  uint32 Reg32;
}  DavicmacCurrentSlot1;


typedef union {
  struct {
    uint32 RangingSlot                    :1; 
    uint32 ContentionSlot                 :1; 
    uint32 ReservedSlot                   :1; 
    uint32 FixedrateSlot                  :1; 
    uint32 RangingBndry                   :4; 
    uint32 ContRsvdBndry                  :4; 
    uint32 RsvdFixedBndry                 :4; 
    uint32 AbsSlotNumber                  :16;
  } Bits;
  uint32 Reg32;
}  DavicmacCurrentSlot2;


typedef union {
  struct {
    uint32 Distance                       :16;
    uint32 Length                         :16;
  } Bits;
  uint32 Reg32;
}  DavicmacFixedRateDistLen;


typedef union {
  struct {
    uint32 StartSlot                      :16;
    uint32 EndSlot                        :16;
  } Bits;
  uint32 Reg32;
}  DavicmacFixedRateStartEnd;


typedef union {
  struct {
    uint32 Reserved                       :4; 
    uint32 Mask                           :28;
  } Bits;
  uint32 Reg32;
}  DavicmacInterruptMask1;


typedef union {
  struct {
    uint32 Reserved                       :5; 
    uint32 Mask                           :27;
  } Bits;
  uint32 Reg32;
}  DavicmacInterruptMask2;


typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 Mask                           :16;
  } Bits;
  uint32 Reg32;
}  DavicmacInterruptMask3;


typedef union {
  struct {
    uint32 Reserved                       :4; 
    uint32 F27                            :1; 
    uint32 F26                            :1; 
    uint32 F25                            :1; 
    uint32 F24                            :1; 
    uint32 F23                            :1; 
    uint32 F22                            :1; 
    uint32 F21                            :1; 
    uint32 F20                            :1; 
    uint32 F19                            :1; 
                                              
    uint32 F18                            :1; 
    uint32 F17                            :1; 
    uint32 F16                            :1; 
    uint32 F15                            :1; 
    uint32 F14                            :1; 
    uint32 F13                            :1; 
    uint32 F12                            :1; 
    uint32 F11                            :1; 
    uint32 F10                            :1; 
    uint32 F9                             :1; 
    uint32 F8                             :1; 
    uint32 F7                             :1; 
    uint32 F6                             :1; 
    uint32 F5                             :1; 
    uint32 F4                             :1; 
    uint32 F3                             :1; 
    uint32 F2                             :1; 
    uint32 F1                             :1; 
    uint32 F0                             :1; 
  } Bits;
  uint32 Reg32;
}  DavicmacInterruptStatus1;


typedef union {
  struct {
    uint32 Reserved                       :5; 
    uint32 F26                            :1; 
    uint32 Reserved2                      :4; 
    uint32 F21                            :1; 
    uint32 F20                            :1; 
    uint32 F19                            :1; 
    uint32 F18                            :1; 
    uint32 F17                            :1; 
    uint32 F16                            :1; 
    uint32 F15                            :1; 
    uint32 F14                            :1; 
    uint32 F13                            :1; 
    uint32 F12                            :1; 
    uint32 F11                            :1; 
    uint32 F10                            :1; 
    uint32 F9                             :1; 
    uint32 F8                             :1; 
    uint32 F7                             :1; 
    uint32 F6                             :1; 
    uint32 F5                             :1; 
    uint32 F4                             :1; 
    uint32 F3                             :1; 
    uint32 F2                             :1; 
    uint32 F1                             :1; 
    uint32 F0                             :1; 
  } Bits;
  uint32 Reg32;
}  DavicmacInterruptStatus2;


typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 Interrupts                     :16;
  } Bits;
  uint32 Reg32;
}  DavicmacInterruptStatus3;


typedef union {
  struct {
    uint32 F1                             :2; 
                                              
                                              
                                              
    uint32 F2                             :1; 
                                              
    uint32 F3                             :1; 
                                              
    uint32 F4                             :2; 
                                              
                                              
                                              
    uint32 F5                             :1; 
                                              
    uint32 F6                             :1; 
                                              
    uint32 F7                             :2; 
                                              
                                              
                                              
    uint32 F8                             :1; 
                                              
    uint32 F9                             :1; 
                                              
    uint32 Ip4Loc                         :5; 
    uint32 Ip3Loc                         :5; 
    uint32 Ip2Loc                         :5; 
    uint32 Ip1Loc                         :5; 
  } Bits;
  uint32 Reg32;
}  DavicmacIpFilterLoc;


typedef union {
  struct {
    uint32 Ds8Aal5                        :1; 
    uint32 Ds7Aal5                        :1; 
    uint32 Ds6Aal5                        :1; 
    uint32 Ds5Aal5                        :1; 
    uint32 Ds4Aal5                        :1; 
    uint32 Ds3Aal5                        :1; 
    uint32 Ds2Aal5                        :1; 
    uint32 Ds1Aal5                        :1; 
    uint32 FlushRxFifo                    :1; 
    uint32 Reserved                       :6; 
    uint32 RetranSel                      :2; 
                                              
                                              
    uint32 RxRegsSel                      :1; 
    uint32 TimeMarkerSel                  :2; 
                                              
    uint32 UsBAll5                        :1; 
    uint32 UsAAal5                        :1; 
    uint32 UsContSel                      :1; 
    uint32 FlushUsB                       :1; 
    uint32 FlushUsA                       :1; 
    uint32 TxTcSel                        :1; 
    uint32 TxOn                           :1; 
    uint32 OobOn                          :1; 
    uint32 RxRateSel                      :1; 
    uint32 TxRateSel                      :2; 
                                              
    uint32 InvalidPacketsAllowed          :1; 
  } Bits;
  uint32 Reg32;
}  DavicmacModeControl;


typedef union {
  struct {
    uint32 Reserved                       :7; 
    uint32 OhValid                        :1; 
    uint32 OhBits                         :24;
  } Bits;
  uint32 Reg32;
}  DavicmacOhBits;


typedef union {
  struct {
    uint32 Reserved                       :7; 
    uint32 ValidFlag                      :1; 
    uint32 Rna                            :8; 
    uint32 Rnb                            :8; 
    uint32 Rnc                            :8; 
  } Bits;
  uint32 Reg32;
}  DavicmacOobRn;


typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 Window                         :16;
  } Bits;
  uint32 Reg32;
}  DavicmacRandomWindow;


typedef union {
  struct {
    uint32 AllHigh                        :1; 
                                              
    uint32 Reserved                       :11;
    uint32 Valid                          :1; 
    uint32 Rn2Slot1Ri                     :1; 
    uint32 Rn2Slot2Ri                     :1; 
    uint32 Rn2Slot3Ri                     :1; 
    uint32 Rn2Slot4Ri                     :1; 
    uint32 Rn2Slot5Ri                     :1; 
    uint32 Rn2Slot6Ri                     :1; 
    uint32 Rn2Slot7Ri                     :1; 
    uint32 Rn2Slot8Ri                     :1; 
    uint32 Rn2Slot9Ri                     :1; 
    uint32 Rn1Valid                       :1; 
    uint32 Rn1Slot1Ri                     :1; 
    uint32 Rn1Slot2Ri                     :1; 
    uint32 Rn1Slot3Ri                     :1; 
    uint32 Rn1Slot4Ri                     :1; 
    uint32 Rn1Slot5Ri                     :1; 
    uint32 Rn1Slot6Ri                     :1; 
    uint32 Rn1Slot7Ri                     :1; 
    uint32 Rn1Slot8Ri                     :1; 
    uint32 Rn1Slot9Ri                     :1; 
  } Bits;
  uint32 Reg32;
}  DavicmacRiFlags;


typedef union {
  struct {
    uint32 Reserved                       :29;
    uint32 TxNegSelect                    :1; 
                                              
    uint32 RxNegSelect                    :1; 
                                              
    uint32 DiagInvert                     :1; 
                                              
  } Bits;
  uint32 Reg32;
}  DavicmacTestSelect;


typedef union {
  struct {
    uint32 CpuOffset                      :16;
    uint32 TxOffset                       :16;
  } Bits;
  uint32 Reg32;
}  DavicmacTimeOffset;


typedef union {
  struct {
    uint32 Reserved                       :1; 
    uint32 RangingSlot                    :1; 
    uint32 ContentionSlot                 :1; 
    uint32 ReservedSlot                   :1; 
    uint32 FixedSlot                      :1; 
    uint32 FixedrateSlot                  :1; 
    uint32 Reserved2                      :5; 
    uint32 RelSlotNumber                  :5; 
    uint32 BaseSlotNumber                 :16;
  } Bits;
  uint32 Reg32;
}  DavicmacTransmissionSlot;


typedef union {
  struct {
    uint32 Reserved                       :24;
    uint32 OobCaptureRn2                  :4; 
    uint32 OobCaptureRn1                  :4; 
  } Bits;
  uint32 Reg32;
}  DavicmacUsChannel;


typedef union {
  struct {
    uint32 Select                         :1; 
                                              
    uint32 Immediate                      :1; 
                                              
                                              
    uint32 UpperLimit                     :10;
    uint32 UsMbitsTxnow                   :10;
    uint32 UsMbitsEsf                     :10;
  } Bits;
  uint32 Reg32;
}  DavicmacUsMbits;


typedef union {
  struct {
    uint32 Reserved                       :6; 
    uint32 TransmitLast                   :1; 
    uint32 TransmitNew                    :1; 
    uint32 Reserved2                      :8; 
    uint32 UsAFifoSize                    :4; 
    uint32 UsBFifoSize                    :4; 
    uint32 Delay                          :8; 
                                              
  } Bits;
  uint32 Reg32;
}  DavicmacUsMisc;


typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 Cpcs                           :8; 
    uint32 Cpi                            :8; 
  } Bits;
  uint32 Reg32;
}  DavicmacUsSarTrailer;


typedef union {
  struct {
    uint32 FullFlag                       :1; 
    uint32 OverflowFlag                   :1; 
    uint32 EmptyFlag                      :1; 
    uint32 FifoSize                       :5; 
    uint32 Reserved                       :1; 
    uint32 CrcSel                         :1; 
                                              
    uint32 SlotPosSel                     :3; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 SlotType                       :3; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 SlotPosMsb                     :8; 
    uint32 SlotPosLsb                     :8; 
  } Bits;
  uint32 Reg32;
}  DavicmacUsSlotAssign;

typedef struct {
  DavicmacModeControl                 ModeControl;             
  DavicmacInterruptStatus1            InterruptStatus1;        
  DavicmacInterruptStatus2            InterruptStatus2;        
  DavicmacInterruptStatus3            InterruptStatus3;        
  DavicmacInterruptMask1              InterruptMask1;          
  DavicmacInterruptMask2              InterruptMask2;          
  DavicmacInterruptMask3              InterruptMask3;          
  DavicmacTimeOffset                  TimeOffset;              
  uint8                               Pad0[0x4];
  DavicmacRiFlags                     RiFlags;                 
  DavicmacBdf                         Bdf;                     
  DavicmacCurrentSlot1                CurrentSlot1;            
  DavicmacCurrentSlot2                CurrentSlot2;            
  DavicmacTransmissionSlot            TransmissionSlot;        
  DavicmacContentionCounter           ContentionCounter;       
  DavicmacUsMbits                     UsMbits;                 
  DavicmacRiFlags                     RiCapture;               
  uint32                              TcPrependMsb;            
  uint32                              TcPrependLsb;            
  DavicmacOobRn                       TxOobRn1;                
  DavicmacOobRn                       TxOobRn2;                
  DavicmacOhBits                      TxOhBits;                
  DavicmacAtmVpiVci                   AtmVpiVci1;              
  uint32                              AtmVpiVciMask1;          
  DavicmacAtmVpiVci                   AtmVpiVci2;              
  uint32                              AtmVpiVciMask2;          
  DavicmacAtmVpiVci                   AtmVpiVci3;              
  uint32                              AtmVpiVciMask3;          
  DavicmacAtmVpiVci                   AtmVpiVci4;              
  uint32                              AtmVpiVciMask4;          
  DavicmacAtmVpiVci                   AtmVpiVci5;              
  uint32                              AtmVpiVciMask5;          
  DavicmacAtmVpiVci                   AtmVpiVci6;              
  uint32                              AtmVpiVciMask6;          
  DavicmacAtmVpiVci                   AtmVpiVci7;              
  uint32                              AtmVpiVciMask7;          
  DavicmacAtmVpiVci                   AtmVpiVci8;              
  uint32                              AtmVpiVciMask8;          
  DavicmacAtmPt                       AtmPt;                   
  DavicmacUsMisc                      UsMisc;                  
  DavicmacUsChannel                   UsChannel;               
  DavicmacUsSlotAssign                UsASlotAssign;           
  uint32                              UsAAtmHeader;            
  DavicmacUsSarTrailer                UsASarTrailer;           
  DavicmacUsSlotAssign                UsBSlotAssign;           
  uint32                              UsBAtmHeader;            
  DavicmacUsSarTrailer                UsBSarTrailer;           
  DavicmacFixedRateStartEnd           FixedRateStartEnd;       
  DavicmacFixedRateDistLen            FixedRateDistLen;        
  uint32                              RandomSeed;              
  DavicmacRandomWindow                RandomWindow;            
  DavicmacOobRn                       OobRn1;                  
  DavicmacOobRn                       OobRn2;                  
  DavicmacOhBits                      OhBits;                  
  DavicmacCounterAtm                  CounterAtm1;             
  DavicmacCounterAtm                  CounterAtm2;             
  DavicmacCounterAtm                  CounterAtm3;             
  DavicmacCounterAtm                  CounterAtm4;             
  DavicmacCounterAtm                  CounterAtm5;             
  DavicmacCounterSar                  CounterSar1;             
  DavicmacCounterSar                  CounterSar2;             
  DavicmacCounterSar                  CounterSar3;             
  DavicmacCounterSar                  CounterSar4;             
  DavicmacCounterTxFlow               CounterTxFlow;           
  DavicmacOobRn                       Ds1OobRn1;               
  DavicmacOobRn                       Ds1OobRn2;               
  DavicmacOhBits                      Ds1OhBits;               
  DavicmacOobRn                       Ds2OobRn1;               
  DavicmacOobRn                       Ds2OobRn2;               
  DavicmacOhBits                      Ds2OhBits;               
  DavicmacOobRn                       Ds3OobRn1;               
  DavicmacOobRn                       Ds3OobRn2;               
  DavicmacOhBits                      Ds3OhBits;               
  DavicmacOobRn                       Ds4OobRn1;               
  DavicmacOobRn                       Ds4OobRn2;               
  DavicmacOhBits                      Ds4OhBits;               
  DavicmacTestSelect                  TestSelect;              
  uint32                              Diag;                    
  uint32                              DiagMask;                
  uint8                               Pad1[0xc4];
  uint32                              Ch1IpFilter1Lsb;         
  uint32                              Ch1IpFilter1Msb;         
  uint32                              Ch1IpMask1Lsb;           
  uint32                              Ch1IpMask1Msb;           
  uint32                              Ch2IpFilter1Lsb;         
  uint32                              Ch2IpFilter1Msb;         
  uint32                              Ch2IpMask1Lsb;           
  uint32                              Ch2IpMask1Msb;           
  uint32                              Ch3IpFilter1Lsb;         
  uint32                              Ch3IpFilter1Msb;         
  uint32                              Ch3IpMask1Lsb;           
  uint32                              Ch3IpMask1Msb;           
  uint32                              Ch4IpFilter1Lsb;         
  uint32                              Ch4IpFilter1Msb;         
  uint32                              Ch4IpMask1Lsb;           
  uint32                              Ch4IpMask1Msb;           
  uint32                              Ch5IpFilter1Lsb;         
  uint32                              Ch5IpFilter1Msb;         
  uint32                              Ch5IpMask1Lsb;           
  uint32                              Ch5IpMask1Msb;           
  uint32                              Ch6IpFilter1Lsb;         
  uint32                              Ch6IpFilter1Msb;         
  uint32                              Ch6IpMask1Lsb;           
  uint32                              Ch6IpMask1Msb;           
  uint32                              Ch7IpFilter1Lsb;         
  uint32                              Ch7IpFilter1Msb;         
  uint32                              Ch7IpMask1Lsb;           
  uint32                              Ch7IpMask1Msb;           
  uint32                              Ch8IpFilter1Lsb;         
  uint32                              Ch8IpFilter1Msb;         
  uint32                              Ch8IpMask1Lsb;           
  uint32                              Ch8IpMask1Msb;           
  uint32                              Ch1IpFilter2Lsb;         
  uint32                              Ch1IpFilter2Msb;         
  uint32                              Ch1IpMask2Lsb;           
  uint32                              Ch1IpMask2Msb;           
  uint32                              Ch2IpFilter2Lsb;         
  uint32                              Ch2IpFilter2Msb;         
  uint32                              Ch2IpMask2Lsb;           
  uint32                              Ch2IpMask2Msb;           
  uint32                              Ch3IpFilter2Lsb;         
  uint32                              Ch3IpFilter2Msb;         
  uint32                              Ch3IpMask2Lsb;           
  uint32                              Ch3IpMask2Msb;           
  uint32                              Ch4IpFilter2Lsb;         
  uint32                              Ch4IpFilter2Msb;         
  uint32                              Ch4IpMask2Lsb;           
  uint32                              Ch4IpMask2Msb;           
  uint32                              Ch5IpFilter2Lsb;         
  uint32                              Ch5IpFilter2Msb;         
  uint32                              Ch5IpMask2Lsb;           
  uint32                              Ch5IpMask2Msb;           
  uint32                              Ch6IpFilter2Lsb;         
  uint32                              Ch6IpFilter2Msb;         
  uint32                              Ch6IpMask2Lsb;           
  uint32                              Ch6IpMask2Msb;           
  uint32                              Ch7IpFilter2Lsb;         
  uint32                              Ch7IpFilter2Msb;         
  uint32                              Ch7IpMask2Lsb;           
  uint32                              Ch7IpMask2Msb;           
  uint32                              Ch8IpFilter2Lsb;         
  uint32                              Ch8IpFilter2Msb;         
  uint32                              Ch8IpMask2Lsb;           
  uint32                              Ch8IpMask2Msb;           
  uint32                              Ch1IpFilter3Lsb;         
  uint32                              Ch1IpFilter3Msb;         
  uint32                              Ch1IpMask3Lsb;           
  uint32                              Ch1IpMask3Msb;           
  uint32                              Ch2IpFilter3Lsb;         
  uint32                              Ch2IpFilter3Msb;         
  uint32                              Ch2IpMask3Lsb;           
  uint32                              Ch2IpMask3Msb;           
  uint32                              Ch3IpFilter3Lsb;         
  uint32                              Ch3IpFilter3Msb;         
  uint32                              Ch3IpMask3Lsb;           
  uint32                              Ch3IpMask3Msb;           
  uint32                              Ch4IpFilter3Lsb;         
  uint32                              Ch4IpFilter3Msb;         
  uint32                              Ch4IpMask3Lsb;           
  uint32                              Ch4IpMask3Msb;           
  uint32                              Ch5IpFilter3Lsb;         
  uint32                              Ch5IpFilter3Msb;         
  uint32                              Ch5IpMask3Lsb;           
  uint32                              Ch5IpMask3Msb;           
  uint32                              Ch6IpFilter3Lsb;         
  uint32                              Ch6IpFilter3Msb;         
  uint32                              Ch6IpMask3Lsb;           
  uint32                              Ch6IpMask3Msb;           
  uint32                              Ch7IpFilter3Lsb;         
  uint32                              Ch7IpFilter3Msb;         
  uint32                              Ch7IpMask3Lsb;           
  uint32                              Ch7IpMask3Msb;           
  uint32                              Ch8IpFilter3Lsb;         
  uint32                              Ch8IpFilter3Msb;         
  uint32                              Ch8IpMask3Lsb;           
  uint32                              Ch8IpMask3Msb;           
  uint32                              Ch1IpFilter4Lsb;         
  uint32                              Ch1IpFilter4Msb;         
  uint32                              Ch1IpMask4Lsb;           
  uint32                              Ch1IpMask4Msb;           
  uint32                              Ch2IpFilter4Lsb;         
  uint32                              Ch2IpFilter4Msb;         
  uint32                              Ch2IpMask4Lsb;           
  uint32                              Ch2IpMask4Msb;           
  uint32                              Ch3IpFilter4Lsb;         
  uint32                              Ch3IpFilter4Msb;         
  uint32                              Ch3IpMask4Lsb;           
  uint32                              Ch3IpMask4Msb;           
  uint32                              Ch4IpFilter4Lsb;         
  uint32                              Ch4IpFilter4Msb;         
  uint32                              Ch4IpMask4Lsb;           
  uint32                              Ch4IpMask4Msb;           
  uint32                              Ch5IpFilter4Lsb;         
  uint32                              Ch5IpFilter4Msb;         
  uint32                              Ch5IpMask4Lsb;           
  uint32                              Ch5IpMask4Msb;           
  uint32                              Ch6IpFilter4Lsb;         
  uint32                              Ch6IpFilter4Msb;         
  uint32                              Ch6IpMask4Lsb;           
  uint32                              Ch6IpMask4Msb;           
  uint32                              Ch7IpFilter4Lsb;         
  uint32                              Ch7IpFilter4Msb;         
  uint32                              Ch7IpMask4Lsb;           
  uint32                              Ch7IpMask4Msb;           
  uint32                              Ch8IpFilter4Lsb;         
  uint32                              Ch8IpFilter4Msb;         
  uint32                              Ch8IpMask4Lsb;           
  uint32                              Ch8IpMask4Msb;           
  DavicmacIpFilterLoc                 Ch1IpFilterLoc;          
  DavicmacIpFilterLoc                 Ch2IpFilterLoc;          
  DavicmacIpFilterLoc                 Ch3IpFilterLoc;          
  DavicmacIpFilterLoc                 Ch4IpFilterLoc;          
  DavicmacIpFilterLoc                 Ch5IpFilterLoc;          
  DavicmacIpFilterLoc                 Ch6IpFilterLoc;          
  DavicmacIpFilterLoc                 Ch7IpFilterLoc;          
  DavicmacIpFilterLoc                 Ch8IpFilterLoc;          
}  DavicmacRegs;

#endif 



