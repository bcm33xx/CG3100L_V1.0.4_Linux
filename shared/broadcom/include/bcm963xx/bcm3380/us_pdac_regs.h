// ****************************************************************************
//
// Copyright (c) 2008 Broadcom Corporation
//
// This program is the proprietary software of Broadcom Corporation and/or
// its licensors, and may only be used, duplicated, modified or distributed
// pursuant to the terms and conditions of a separate, written license
// agreement executed between you and Broadcom (an "Authorized License").
// Except as set forth in an Authorized License, Broadcom grants no license
// (express or implied), right to use, or waiver of any kind with respect to
// the Software, and Broadcom expressly reserves all rights in and to the
// Software and all intellectual property rights therein.  IF YOU HAVE NO
// AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY,
// AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE
// SOFTWARE.  
//
// Except as expressly set forth in the Authorized License,
//
// 1.     This program, including its structure, sequence and organization,
// constitutes the valuable trade secrets of Broadcom, and you shall use all
// reasonable efforts to protect the confidentiality thereof, and to use this
// information only in connection with your use of Broadcom integrated circuit
// products.
//
// 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED
// "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS
// OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH
// RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL
// IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR
// A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET
// ENJOYMENT, QUIET POSSESSION OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME
// THE ENTIRE RISK ARISING OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
//
// 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM
// OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL,
// INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY
// RELATING TO YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM
// HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN
// EXCESS OF THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
// WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY
// FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.
//
// ****************************************************************************
//
//  Filename:         us_pdac_regs.h
//  Generated by:     RDB Utility
//  Creation Date:    8/7/2008
//  Command Line:     
// ****************************************************************************
//
// IMPORTANT: DO NOT MODIFY, THIS IS AN AUTOGENERATED FILE. 
// Please modify the source .rdb file instead if you need to change this file. 
// Contact Jeff Bauch if you need more information.
//
// ****************************************************************************
#ifndef US_PDAC_REGS_H__
#define US_PDAC_REGS_H__



typedef union {
  struct {
    uint32 Reserved1                      :30;
    uint32 Filt                           :1; 
                                              
                                              
    uint32 PwrRamp                        :1; 
                                              
                                              
  } Bits;
  uint32 Reg32;
}  UsPdacByp;


typedef union {
  struct {
    uint32 Reserved                       :28;
    uint32 Filt3                          :1; 
    uint32 Filt2                          :1; 
    uint32 Filt1                          :1; 
    uint32 Filt0                          :1; 
  } Bits;
  uint32 Reg32;
}  UsPdacClip;


typedef union {
  struct {
    uint32 Filt0Crc                       :16;
    uint32 Filt1Crc                       :16;
  } Bits;
  uint32 Reg32;
}  UsPdacFilt01Crc;


typedef union {
  struct {
    uint32 Filt2Crc                       :16;
    uint32 Filt3Crc                       :16;
  } Bits;
  uint32 Reg32;
}  UsPdacFilt23Crc;


typedef union {
  struct {
    uint32 Reserved1                      :23;
    uint32 Inp1En                         :1; 
                                              
                                              
    uint32 Inp1Sel                        :4; 
                                              
                                              
                                              
                                              
                                              
    uint32 Inp0Sel                        :4; 
                                              
                                              
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  UsPdacInp;


typedef union {
  struct {
    uint32 Inp0Crc                        :16;
    uint32 Inp1Crc                        :16;
  } Bits;
  uint32 Reg32;
}  UsPdacInp01Crc;


typedef union {
  struct {
    uint32 Inp2Crc                        :16;
    uint32 Inp3Crc                        :16;
  } Bits;
  uint32 Reg32;
}  UsPdacInp23Crc;


typedef union {
  struct {
    uint32 Int0Crc                        :16;
    uint32 Int1Crc                        :16;
  } Bits;
  uint32 Reg32;
}  UsPdacInt01Crc;


typedef union {
  struct {
    uint32 Int2Crc                        :16;
    uint32 Int3Crc                        :16;
  } Bits;
  uint32 Reg32;
}  UsPdacInt23Crc;


typedef union {
  struct {
    uint32 Reserved1                      :23;
    uint32 Inp1En                         :1; 
                                              
                                              
    uint32 Inp1Sel                        :4; 
                                              
                                              
                                              
                                              
                                              
    uint32 Inp0Sel                        :4; 
                                              
                                              
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  UsPdacIntInp;


typedef union {
  struct {
    uint32 Reserved2                      :16;
    uint32 Reserved1                      :3; 
    uint32 Coarse                         :5; 
    uint32 Reserved0                      :2; 
    uint32 Fine                           :6; 
  } Bits;
  uint32 Reg32;
}  UsPdacIntPwr;


typedef union {
  struct {
    uint32 Reserved2                      :24;
    uint32 Reserved1                      :1; 
    uint32 Reserved0                      :1; 
    uint32 Clip                           :1; 
                                              
    uint32 Test                           :1; 
    uint32 Misc                           :1; 
    uint32 Pwr                            :1; 
    uint32 Tx                             :1; 
    uint32 Cg                             :1; 
  } Bits;
  uint32 Reg32;
}  UsPdacIntRst;


typedef union {
  struct {
    uint32 Reserved1                      :30;
    uint32 UseSftIntPaEn                  :1; 
                                              
                                              
    uint32 SftIntPaEn                     :1; 
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  UsPdacMisc;


typedef union {
  struct {
    uint32 Reserved2                      :16;
    uint32 Reserved1                      :3; 
    uint32 Coarse                         :5; 
    uint32 Reserved0                      :2; 
    uint32 Fine                           :6; 
  } Bits;
  uint32 Reg32;
}  UsPdacPwr;


typedef union {
  struct {
    uint32 Reserved2                      :28;
    uint32 Dac3                           :1; 
                                              
                                              
    uint32 Dac2                           :1; 
                                              
                                              
    uint32 Dac1                           :1; 
                                              
                                              
    uint32 Dac0                           :1; 
                                              
                                              
  } Bits;
  uint32 Reg32;
}  UsPdacPwrdn;


typedef union {
  struct {
    uint32 Reserved2                      :24;
    uint32 Reserved1                      :1; 
    uint32 Reserved0                      :1; 
    uint32 Clip                           :1; 
    uint32 Test                           :1; 
    uint32 Misc                           :1; 
    uint32 Pwr                            :1; 
    uint32 Tx                             :1; 
    uint32 Cg                             :1; 
  } Bits;
  uint32 Reg32;
}  UsPdacRst;


typedef union {
  struct {
    uint32 Oe                             :1; 
    uint32 RampPwrUp                      :1; 
    uint32 RampPwrDn                      :1; 
    uint32 RampPwrError                   :1; 
                                              
    uint32 EnClkPwr                       :1; 
    uint32 PwrFineCntGt0                  :1; 
    uint32 UsPipeBusy                     :1; 
    uint32 RampPwr                        :1; 
                                              
    uint32 RampPwr3                       :1; 
                                              
    uint32 RampPwr2                       :1; 
                                              
    uint32 RampPwr1                       :1; 
                                              
    uint32 RampPwr0                       :1; 
                                              
    uint32 UsPipeBusy3                    :1; 
    uint32 UsPipeBusy2                    :1; 
    uint32 UsPipeBusy1                    :1; 
    uint32 UsPipeBusy0                    :1; 
    uint32 Reserved1                      :3; 
    uint32 Coarse                         :5; 
    uint32 Reserved0                      :2; 
    uint32 Fine                           :6; 
  } Bits;
  uint32 Reg32;
}  UsPdacStatus;

typedef struct {
  UsPdacRst                           Rst;                     
  UsPdacStatus                        Status;                  
  UsPdacInp                           Inp;                     
  UsPdacByp                           Byp;                     
  UsPdacPwrdn                         Pwrdn;                   
  UsPdacMisc                          Misc;                    
  UsPdacPwr                           Pwr;                     
  UsPdacIntPwr                        IntPwr;                  
  UsPdacIntInp                        IntInp;                  
  UsPdacClip                          Clip;                    
  UsPdacIntRst                        IntRst;                  
  uint8                               Pad0[0x38];
  uint32                              PwrCrc;                  
  UsPdacFilt01Crc                     Filt01Crc;               
  UsPdacFilt23Crc                     Filt23Crc;               
  UsPdacInp01Crc                      Inp01Crc;                
  UsPdacInp23Crc                      Inp23Crc;                
  UsPdacInt01Crc                      Int01Crc;                
  UsPdacInt23Crc                      Int23Crc;                
}  UsPdacRegs;

#endif 



