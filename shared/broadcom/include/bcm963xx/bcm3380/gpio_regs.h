// ****************************************************************************
//
// Copyright (c) 2008 Broadcom Corporation
//
// This program is the proprietary software of Broadcom Corporation and/or
// its licensors, and may only be used, duplicated, modified or distributed
// pursuant to the terms and conditions of a separate, written license
// agreement executed between you and Broadcom (an "Authorized License").
// Except as set forth in an Authorized License, Broadcom grants no license
// (express or implied), right to use, or waiver of any kind with respect to
// the Software, and Broadcom expressly reserves all rights in and to the
// Software and all intellectual property rights therein.  IF YOU HAVE NO
// AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY,
// AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE
// SOFTWARE.  
//
// Except as expressly set forth in the Authorized License,
//
// 1.     This program, including its structure, sequence and organization,
// constitutes the valuable trade secrets of Broadcom, and you shall use all
// reasonable efforts to protect the confidentiality thereof, and to use this
// information only in connection with your use of Broadcom integrated circuit
// products.
//
// 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED
// "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS
// OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH
// RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL
// IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR
// A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET
// ENJOYMENT, QUIET POSSESSION OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME
// THE ENTIRE RISK ARISING OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
//
// 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM
// OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL,
// INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY
// RELATING TO YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM
// HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN
// EXCESS OF THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
// WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY
// FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.
//
// ****************************************************************************
//
//  Filename:         gpio.h
//  Generated by:     RDB Utility
//  Creation Date:    8/7/2008
//  Command Line:     
// ****************************************************************************
//
// IMPORTANT: DO NOT MODIFY, THIS IS AN AUTOGENERATED FILE. 
// Please modify the source .rdb file instead if you need to change this file. 
// Contact Jeff Bauch if you need more information.
//
// ****************************************************************************
#ifndef GPIO_H__
#define GPIO_H__



typedef union {
  struct {
    uint32 Reserved                       :22;
    uint32 GphyBypXtal                    :1; 
                                              
                                              
    uint32 PcieResetEn                    :1; 
    uint32 SpimClkSel                     :1; 
    uint32 UnimacClkDivNeg                :3; 
    uint32 UnimacClkDivPos                :3; 
    uint32 UnimacClkDivSel                :1; 
  } Bits;
  uint32 Reg32;
}  GpioClkrstMisc;


typedef union {
  struct {
    uint32 Reserved                       :31;
    uint32 OverFlowDet                    :1; 
                                              
  } Bits;
  uint32 Reg32;
}  GpioDiagCaptOvflDet;


typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 HbCount                        :16;
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  GpioDiagMemHbCount;


typedef union {
  struct {
    uint32 Chipid                         :16;
    uint32 Revid                          :16;
  } Bits;
  uint32 Reg32;
}  GpioDieRevId;


typedef union {
  struct {
    uint32 Reserved                       :31;
    uint32 StrapOverride                  :1; 
                                              
                                              
  } Bits;
  uint32 Reg32;
}  GpioMipsDdrPllOverride;


typedef union {
  struct {
    uint32 PmSelectMdio                   :2; 
    uint32 PmSelectGmiiTxd                :2; 
    uint32 PmSelectGmiiTx                 :2; 
    uint32 PmSelectGmiiRx                 :2; 
    uint32 PmSelectGmiiRxd                :2; 
    uint32 PmSelectReserved               :2; 
    uint32 PmSelectGpio3532               :2; 
    uint32 PmSelectGpio3130               :2; 
    uint32 PmSelectGpio2924               :2; 
    uint32 PmSelectGpio2320               :2; 
    uint32 PmSelectGpio1918               :2; 
    uint32 PmSelectGpio1716               :2; 
    uint32 PmSelectGpio1514               :2; 
    uint32 PmSelectGpio1312               :2; 
    uint32 PmSelectGpio1106               :2; 
    uint32 PmSelectGpio0500               :2; 
  } Bits;
  uint32 Reg32;
}  GpioPinMuxSel;


typedef union {
  struct {
    uint32 Reserved                       :10;
    uint32 PmSelectUsb1                   :2; 
    uint32 PmSelectUsb0                   :2; 
    uint32 PmSelectGmiiClk                :2; 
    uint32 PmSelectLed0700                :2; 
    uint32 PmSelectSpisUart1              :2; 
    uint32 PmSelectAgci0704               :2; 
    uint32 PmSelectAgci0300               :2; 
    uint32 PmSelectPass                   :2; 
    uint32 PmSelectHvg                    :2; 
    uint32 PmSelectBmu                    :2; 
    uint32 PmSelectTpMisc                 :2; 
  } Bits;
  uint32 Reg32;
}  GpioPinMuxSelHi;


typedef union {
  struct {
    uint32 Reserved                       :24;
    uint32 RbusDiagSelHi                  :4; 
    uint32 RbusDiagSelLo                  :4; 
  } Bits;
  uint32 Reg32;
}  GpioRbusDiagSel;


typedef union {
  struct {
    uint32 Reserved                       :28;
    uint32 RingOscCount                   :4; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  GpioRingOscCtrl0;


typedef union {
  struct {
    uint32 Reserved                       :8; 
    uint32 RingCntRst                     :1; 
                                              
    uint32 Reserved2                      :4; 
    uint32 RingOscIrq                     :1; 
                                              
    uint32 CounterOverflow                :1; 
                                              
                                              
                                              
    uint32 CounterBusy                    :1; 
                                              
    uint32 RoCount                        :16;
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  GpioRingOscCtrl1;


typedef union {
  struct {
    uint32 Reserved                       :12;
    uint32 SpimModeOverride               :1; 
                                              
    uint32 ForceSpisMisoOut               :1; 
                                              
    uint32 SpiPassthruEn                  :1; 
                                              
    uint32 HsSpimEn                       :1; 
                                              
    uint32 Reserved2                      :4; 
    uint32 HsSpiFlashOffset               :12;
  } Bits;
  uint32 Reg32;
}  GpioSpimasterControl;


typedef union {
  struct {
    uint32 SpiOverride                    :1; 
                                              
                                              
    uint32 Reserved                       :14;
    uint32 EjtagEnable                    :1; 
    uint32 Reserved2                      :5; 
    uint32 TestEn                         :1; 
    uint32 TestMode                       :10;
  } Bits;
  uint32 Reg32;
}  GpioTestControl;


typedef union {
  struct {
    uint32 Reserved                       :14;
    uint32 DiagCaptEnaCompression16       :1; 
                                              
                                              
                                              
    uint32 DiagCaptEnaCompression         :1; 
                                              
    uint32 FillByte                       :8; 
                                              
                                              
    uint32 DiagCaptEnaStopTrigger         :1; 
                                              
                                              
    uint32 DiagCaptFill                   :1; 
                                              
                                              
                                              
                                              
    uint32 DiagCaptEnaTrigger             :1; 
                                              
                                              
                                              
                                              
    uint32 DiagCaptEnaClkEna              :1; 
                                              
                                              
    uint32 DiagCaptHiLo                   :1; 
                                              
                                              
                                              
                                              
                                              
    uint32 DiagCapt3216                   :1; 
                                              
                                              
                                              
                                              
                                              
    uint32 DiagMemSel                     :1; 
                                              
                                              
                                              
    uint32 DiagMemEnable                  :1; 
                                              
                                              
                                              
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  GpioDiagMemCtl;


typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 Oscctrl                        :16;
  } Bits;
  uint32 Reg32;
}  GpioOscCtl;


typedef union {
  struct {
    uint32 Reserved                       :31;
    uint32 RefPllLock                     :1; 
  } Bits;
  uint32 Reg32;
}  GpioRefPllStatus;


typedef union {
  struct {
    uint32 Reserved                       :14;
    uint32 SpiSSlv                        :1; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 SpiSlvRst                      :1; 
    uint32 Reserved2                      :6; 
    uint32 DlyDis                         :1; 
                                              
    uint32 Reserved3                      :4; 
    uint32 SerialAddrCfg                  :4; 
    uint32 SpiMode                        :1; 
  } Bits;
  uint32 Reg32;
}  GpioSpiConfig;


typedef union {
  struct {
    uint32 Reserved                       :9; 
    uint32 StrapReserved                  :1; 
    uint32 PcieRootComplexB               :1; 
    uint32 HsSpimFast                     :1; 
    uint32 Slave3380                      :1; 
    uint32 TbusAsync                      :1; 
    uint32 IxtalAdjB                      :2; 
    uint32 BypassXtalB                    :1; 
    uint32 SysPllUseLock                  :1; 
    uint32 DdrPllUseLock                  :1; 
    uint32 ResetDelayCfg                  :2; 
    uint32 TbusSelect                     :1; 
    uint32 Reserved2                      :1; 
    uint32 BootHsSpimB                    :1; 
    uint32 ForceAsyncMips                 :1; 
    uint32 MipsClkSelN                    :5; 
    uint32 ApmPicoBootRom                 :1; 
                                              
    uint32 FlashAddr24                    :1; 
  } Bits;
  uint32 Reg32;
}  GpioStrapBus;


typedef union {
  struct {
    uint32 Reserved                       :31;
    uint32 StrapOverride                  :1; 
                                              
                                              
  } Bits;
  uint32 Reg32;
}  GpioStrapOverride;


typedef union {
  struct {
    uint32 Reserved                       :18;
    uint32 Vreg2Pwrdwn                    :1; 
                                              
    uint32 Vreg1Pwrdwn                    :1; 
                                              
    uint32 Vreg2Adj                       :4; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 Reserved2                      :4; 
    uint32 Vreg1Adj                       :4; 
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  GpioVregConfig;


typedef union {
  struct {
    uint32 Reserved                       :20;
    uint32 XtalbufCtrl                    :12;
  } Bits;
  uint32 Reg32;
}  GpioXtalbufCtrl;

typedef struct {
  uint32                              DirLo;                   
  uint32                              DirHi;                   
  uint32                              DataLo;                  
  uint32                              DataHi;                  
  uint32                              Reserved1;               
  GpioSpiConfig                       SpiConfig;               
  uint32                              Reserved2;               
  GpioVregConfig                      VregConfig;              
  uint32                              Reserved3;               
  uint32                              Reserved4;               
  GpioTestControl                     Testcontrol;             
  uint8                               Pad0[0x14];
  GpioStrapBus                        StrapBus;                
  GpioStrapOverride                   StrapOverride;           
  uint8                               Pad1[0x4];
  GpioRefPllStatus                    RefPllStatus;            
  GpioOscCtl                          OscCtl;                  
  GpioXtalbufCtrl                     XtalbufCtrl;             
  GpioDiagMemCtl                      DiagMemCtl;              
  uint32                              DiagMemSize;             
  uint32                              SrcAddr;                 
  uint32                              DestAddr;                
  GpioRingOscCtrl0                    RingOscCtrlSet0;         
  GpioRingOscCtrl1                    RingOscCtrlSet1;         
  GpioRbusDiagSel                     RbusDiagSel;             
  uint32                              DiagCaptLastWrAddr;      
  GpioMipsDdrPllOverride              MipsDrrPllOverride;      
  GpioDieRevId                        Dierevid;                
  GpioPinMuxSel                       PinMuxSel;               
  GpioPinMuxSelHi                     PinMuxSelHi;             
  GpioSpimasterControl                SpimasterControl;        
  GpioClkrstMisc                      ClkrstMisc;              
  uint32                              TransportOe;             
  GpioDiagCaptOvflDet                 DiagCaptOvflDet;         
  GpioDiagMemHbCount                  DiagMemHbCount;          
}  GpioRegs;

#endif 



